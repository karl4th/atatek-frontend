{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/baxa/Documents/atatek/atatek-v2/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { useRouter, usePathname } from \"next/navigation\";\nimport axios from \"axios\";\nimport { toast } from \"sonner\";\n\ntype Role = {\n\tid: number;\n\tname: string;\n\tdescription?: string;\n}\n\ntype Tariff = {\n\tid: number;\n\tname: string;\n\tt_add_child: number;\n\tt_edit_child: number;\n\tt_family_count: number;\n}\n\ntype User = {\n\tid: number;\n\tfirst_name: string;\n\tlast_name: string;\n\tmiddle_name: string;\n\tphone: string;\n\trole: Role;\n\ttariff: Tariff;\n}\n\ntype Page = {\n\tid: number;\n\ttitle: string;\n\tt_id: number;\n\tbread1: string;\n\tbread2: string;\n\tbread3: string;\n}\n\ntype Response = {\n\tstatus: string;\n\tversion: string;\n\tdata: Page | [];\n}\n\ntype AuthContextType = {\n\tuser: User | null;\n\tpage: Page | null;\n\tcheckAuth: () => Promise<void>;\n\tlogin: (phone: string, password: string) => Promise<boolean>;\n\tlogout: () => Promise<void>;\n\tloading: boolean;\n\terror: string | null;\n\tisHydrated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n\tconst [user, setUser] = useState<User | null>(null);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState<string | null>(null);\n\tconst [page, setPage] = useState<Page | null>(null);\n\tconst [isHydrated, setIsHydrated] = useState(false);\n\tconst router = useRouter();\n\tconst pathname = usePathname();\n\n\tuseEffect(() => {\n\t\tsetIsHydrated(true);\n\t\tcheckAuth();\n\t\tgetPage();\n\t}, []);\n\n\tconst login = async (phone: string, password: string) => {\n\t\ttry {\n\t\t\tconst response = await axios.post('https://api.atatek.kz/auth/login', { phone, password }, { withCredentials: true });\n\t\t\tsetUser(response.data.data);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\ttoast(\"Телефон номеріңіз немесе құпия сөзіңіз қате\")\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst checkAuth = async () => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst res = await axios.get('https://api.atatek.kz/auth/get-me', {\n\t\t\t\twithCredentials: true,\n\t\t\t});\n\t\t\tsetUser(res.data.data);\n\t\t\tsetError(null);\n\t\t} catch (error) {\n\t\t\tsetUser(null);\n\t\t\tsetError('Не авторизован');\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst logout = async () => {\n\t\ttry {\n\t\t\t// Ask backend to invalidate cookie. Ignore errors - we'll still clear client state\n\t\t\tawait axios.post('https://api.atatek.kz/auth/logout', {}, { withCredentials: true });\n\t\t} catch (error) {\n\t\t\t// nothing\n\t\t} finally {\n\t\t\tsetUser(null);\n\t\t\trouter.push('/auth/login');\n\t\t}\n\t}\n\n\t// Handle redirect after hydration\n\tuseEffect(() => {\n\t\tif (isHydrated && !loading && !user && error) {\n\t\t\tconst isAuthPage = pathname?.startsWith('/auth/');\n\t\t\tif (!isAuthPage) {\n\t\t\t\trouter.push('/auth/login');\n\t\t\t}\n\t\t}\n\t}, [isHydrated, loading, user, error, pathname, router]);\n\t\n\tconst getPage = async () => {\n\t\ttry{\n\t\t\tconst response = await axios.get<Response>(`https://api.atatek.kz/auth/my-page`, { withCredentials: true });\n\t\t\tif (response.data.status === 'success') {\n\t\t\t\tsetPage(response.data.data as Page);\n\t\t\t}\n\t\t}\n\t\tcatch(error){\n\t\t\tsetPage(null);\n\t\t}\n\t\t\n\t}\n\n\t// Always render children, but handle loading states properly\n\treturn (\n\t\t<AuthContext.Provider value={{ user, loading, login, logout, error, checkAuth, page, isHydrated }}>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n}\n\nexport const useAuth = () => {\n\tconst context = useContext(AuthContext);\n\tif (!context) throw new Error('useAuth must be used within AuthProvider');\n\treturn context;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/baxa/Documents/atatek/atatek-v2/frontend/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6LAAC,2IAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf;GAjBM;;QACyB,mJAAA,CAAA,WAAQ;;;KADjC","debugId":null}}]
}