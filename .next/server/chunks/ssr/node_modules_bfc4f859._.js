module.exports = {

"[project]/node_modules/clsx/dist/clsx.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clsx": (()=>clsx),
    "default": (()=>__TURBOPACK__default__export__)
});
function r(e) {
    var t, f, n = "";
    if ("string" == typeof e || "number" == typeof e) n += e;
    else if ("object" == typeof e) if (Array.isArray(e)) {
        var o = e.length;
        for(t = 0; t < o; t++)e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
    } else for(f in e)e[f] && (n && (n += " "), n += f);
    return n;
}
function clsx() {
    for(var e, t, f = 0, n = "", o = arguments.length; f < o; f++)(e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
    return n;
}
const __TURBOPACK__default__export__ = clsx;
}}),
"[project]/node_modules/tailwind-merge/dist/bundle-mjs.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createTailwindMerge": (()=>createTailwindMerge),
    "extendTailwindMerge": (()=>extendTailwindMerge),
    "fromTheme": (()=>fromTheme),
    "getDefaultConfig": (()=>getDefaultConfig),
    "mergeConfigs": (()=>mergeConfigs),
    "twJoin": (()=>twJoin),
    "twMerge": (()=>twMerge),
    "validators": (()=>validators)
});
const CLASS_PART_SEPARATOR = '-';
const createClassGroupUtils = (config)=>{
    const classMap = createClassMap(config);
    const { conflictingClassGroups, conflictingClassGroupModifiers } = config;
    const getClassGroupId = (className)=>{
        const classParts = className.split(CLASS_PART_SEPARATOR);
        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.
        if (classParts[0] === '' && classParts.length !== 1) {
            classParts.shift();
        }
        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
    };
    const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier)=>{
        const conflicts = conflictingClassGroups[classGroupId] || [];
        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {
            return [
                ...conflicts,
                ...conflictingClassGroupModifiers[classGroupId]
            ];
        }
        return conflicts;
    };
    return {
        getClassGroupId,
        getConflictingClassGroupIds
    };
};
const getGroupRecursive = (classParts, classPartObject)=>{
    if (classParts.length === 0) {
        return classPartObject.classGroupId;
    }
    const currentClassPart = classParts[0];
    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);
    const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;
    if (classGroupFromNextClassPart) {
        return classGroupFromNextClassPart;
    }
    if (classPartObject.validators.length === 0) {
        return undefined;
    }
    const classRest = classParts.join(CLASS_PART_SEPARATOR);
    return classPartObject.validators.find(({ validator })=>validator(classRest))?.classGroupId;
};
const arbitraryPropertyRegex = /^\[(.+)\]$/;
const getGroupIdForArbitraryProperty = (className)=>{
    if (arbitraryPropertyRegex.test(className)) {
        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];
        const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));
        if (property) {
            // I use two dots here because one dot is used as prefix for class groups in plugins
            return 'arbitrary..' + property;
        }
    }
};
/**
 * Exported for testing only
 */ const createClassMap = (config)=>{
    const { theme, classGroups } = config;
    const classMap = {
        nextPart: new Map(),
        validators: []
    };
    for(const classGroupId in classGroups){
        processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);
    }
    return classMap;
};
const processClassesRecursively = (classGroup, classPartObject, classGroupId, theme)=>{
    classGroup.forEach((classDefinition)=>{
        if (typeof classDefinition === 'string') {
            const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);
            classPartObjectToEdit.classGroupId = classGroupId;
            return;
        }
        if (typeof classDefinition === 'function') {
            if (isThemeGetter(classDefinition)) {
                processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
                return;
            }
            classPartObject.validators.push({
                validator: classDefinition,
                classGroupId
            });
            return;
        }
        Object.entries(classDefinition).forEach(([key, classGroup])=>{
            processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);
        });
    });
};
const getPart = (classPartObject, path)=>{
    let currentClassPartObject = classPartObject;
    path.split(CLASS_PART_SEPARATOR).forEach((pathPart)=>{
        if (!currentClassPartObject.nextPart.has(pathPart)) {
            currentClassPartObject.nextPart.set(pathPart, {
                nextPart: new Map(),
                validators: []
            });
        }
        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
    });
    return currentClassPartObject;
};
const isThemeGetter = (func)=>func.isThemeGetter;
// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance
const createLruCache = (maxCacheSize)=>{
    if (maxCacheSize < 1) {
        return {
            get: ()=>undefined,
            set: ()=>{}
        };
    }
    let cacheSize = 0;
    let cache = new Map();
    let previousCache = new Map();
    const update = (key, value)=>{
        cache.set(key, value);
        cacheSize++;
        if (cacheSize > maxCacheSize) {
            cacheSize = 0;
            previousCache = cache;
            cache = new Map();
        }
    };
    return {
        get (key) {
            let value = cache.get(key);
            if (value !== undefined) {
                return value;
            }
            if ((value = previousCache.get(key)) !== undefined) {
                update(key, value);
                return value;
            }
        },
        set (key, value) {
            if (cache.has(key)) {
                cache.set(key, value);
            } else {
                update(key, value);
            }
        }
    };
};
const IMPORTANT_MODIFIER = '!';
const MODIFIER_SEPARATOR = ':';
const MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;
const createParseClassName = (config)=>{
    const { prefix, experimentalParseClassName } = config;
    /**
   * Parse class name into parts.
   *
   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS
   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js
   */ let parseClassName = (className)=>{
        const modifiers = [];
        let bracketDepth = 0;
        let parenDepth = 0;
        let modifierStart = 0;
        let postfixModifierPosition;
        for(let index = 0; index < className.length; index++){
            let currentCharacter = className[index];
            if (bracketDepth === 0 && parenDepth === 0) {
                if (currentCharacter === MODIFIER_SEPARATOR) {
                    modifiers.push(className.slice(modifierStart, index));
                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH;
                    continue;
                }
                if (currentCharacter === '/') {
                    postfixModifierPosition = index;
                    continue;
                }
            }
            if (currentCharacter === '[') {
                bracketDepth++;
            } else if (currentCharacter === ']') {
                bracketDepth--;
            } else if (currentCharacter === '(') {
                parenDepth++;
            } else if (currentCharacter === ')') {
                parenDepth--;
            }
        }
        const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);
        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);
        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;
        const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;
        return {
            modifiers,
            hasImportantModifier,
            baseClassName,
            maybePostfixModifierPosition
        };
    };
    if (prefix) {
        const fullPrefix = prefix + MODIFIER_SEPARATOR;
        const parseClassNameOriginal = parseClassName;
        parseClassName = (className)=>className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {
                isExternal: true,
                modifiers: [],
                hasImportantModifier: false,
                baseClassName: className,
                maybePostfixModifierPosition: undefined
            };
    }
    if (experimentalParseClassName) {
        const parseClassNameOriginal = parseClassName;
        parseClassName = (className)=>experimentalParseClassName({
                className,
                parseClassName: parseClassNameOriginal
            });
    }
    return parseClassName;
};
const stripImportantModifier = (baseClassName)=>{
    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {
        return baseClassName.substring(0, baseClassName.length - 1);
    }
    /**
   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.
   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864
   */ if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {
        return baseClassName.substring(1);
    }
    return baseClassName;
};
/**
 * Sorts modifiers according to following schema:
 * - Predefined modifiers are sorted alphabetically
 * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it
 */ const createSortModifiers = (config)=>{
    const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map((modifier)=>[
            modifier,
            true
        ]));
    const sortModifiers = (modifiers)=>{
        if (modifiers.length <= 1) {
            return modifiers;
        }
        const sortedModifiers = [];
        let unsortedModifiers = [];
        modifiers.forEach((modifier)=>{
            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];
            if (isPositionSensitive) {
                sortedModifiers.push(...unsortedModifiers.sort(), modifier);
                unsortedModifiers = [];
            } else {
                unsortedModifiers.push(modifier);
            }
        });
        sortedModifiers.push(...unsortedModifiers.sort());
        return sortedModifiers;
    };
    return sortModifiers;
};
const createConfigUtils = (config)=>({
        cache: createLruCache(config.cacheSize),
        parseClassName: createParseClassName(config),
        sortModifiers: createSortModifiers(config),
        ...createClassGroupUtils(config)
    });
const SPLIT_CLASSES_REGEX = /\s+/;
const mergeClassList = (classList, configUtils)=>{
    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } = configUtils;
    /**
   * Set of classGroupIds in following format:
   * `{importantModifier}{variantModifiers}{classGroupId}`
   * @example 'float'
   * @example 'hover:focus:bg-color'
   * @example 'md:!pr'
   */ const classGroupsInConflict = [];
    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);
    let result = '';
    for(let index = classNames.length - 1; index >= 0; index -= 1){
        const originalClassName = classNames[index];
        const { isExternal, modifiers, hasImportantModifier, baseClassName, maybePostfixModifierPosition } = parseClassName(originalClassName);
        if (isExternal) {
            result = originalClassName + (result.length > 0 ? ' ' + result : result);
            continue;
        }
        let hasPostfixModifier = !!maybePostfixModifierPosition;
        let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);
        if (!classGroupId) {
            if (!hasPostfixModifier) {
                // Not a Tailwind class
                result = originalClassName + (result.length > 0 ? ' ' + result : result);
                continue;
            }
            classGroupId = getClassGroupId(baseClassName);
            if (!classGroupId) {
                // Not a Tailwind class
                result = originalClassName + (result.length > 0 ? ' ' + result : result);
                continue;
            }
            hasPostfixModifier = false;
        }
        const variantModifier = sortModifiers(modifiers).join(':');
        const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
        const classId = modifierId + classGroupId;
        if (classGroupsInConflict.includes(classId)) {
            continue;
        }
        classGroupsInConflict.push(classId);
        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);
        for(let i = 0; i < conflictGroups.length; ++i){
            const group = conflictGroups[i];
            classGroupsInConflict.push(modifierId + group);
        }
        // Tailwind class not in conflict
        result = originalClassName + (result.length > 0 ? ' ' + result : result);
    }
    return result;
};
/**
 * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.
 *
 * Specifically:
 * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js
 * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts
 *
 * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)
 */ function twJoin() {
    let index = 0;
    let argument;
    let resolvedValue;
    let string = '';
    while(index < arguments.length){
        if (argument = arguments[index++]) {
            if (resolvedValue = toValue(argument)) {
                string && (string += ' ');
                string += resolvedValue;
            }
        }
    }
    return string;
}
const toValue = (mix)=>{
    if (typeof mix === 'string') {
        return mix;
    }
    let resolvedValue;
    let string = '';
    for(let k = 0; k < mix.length; k++){
        if (mix[k]) {
            if (resolvedValue = toValue(mix[k])) {
                string && (string += ' ');
                string += resolvedValue;
            }
        }
    }
    return string;
};
function createTailwindMerge(createConfigFirst, ...createConfigRest) {
    let configUtils;
    let cacheGet;
    let cacheSet;
    let functionToCall = initTailwindMerge;
    function initTailwindMerge(classList) {
        const config = createConfigRest.reduce((previousConfig, createConfigCurrent)=>createConfigCurrent(previousConfig), createConfigFirst());
        configUtils = createConfigUtils(config);
        cacheGet = configUtils.cache.get;
        cacheSet = configUtils.cache.set;
        functionToCall = tailwindMerge;
        return tailwindMerge(classList);
    }
    function tailwindMerge(classList) {
        const cachedResult = cacheGet(classList);
        if (cachedResult) {
            return cachedResult;
        }
        const result = mergeClassList(classList, configUtils);
        cacheSet(classList, result);
        return result;
    }
    return function callTailwindMerge() {
        return functionToCall(twJoin.apply(null, arguments));
    };
}
const fromTheme = (key)=>{
    const themeGetter = (theme)=>theme[key] || [];
    themeGetter.isThemeGetter = true;
    return themeGetter;
};
const arbitraryValueRegex = /^\[(?:(\w[\w-]*):)?(.+)\]$/i;
const arbitraryVariableRegex = /^\((?:(\w[\w-]*):)?(.+)\)$/i;
const fractionRegex = /^\d+\/\d+$/;
const tshirtUnitRegex = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/;
const lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/;
const colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/;
// Shadow always begins with x and y offset separated by underscore optionally prepended by inset
const shadowRegex = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
const imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
const isFraction = (value)=>fractionRegex.test(value);
const isNumber = (value)=>!!value && !Number.isNaN(Number(value));
const isInteger = (value)=>!!value && Number.isInteger(Number(value));
const isPercent = (value)=>value.endsWith('%') && isNumber(value.slice(0, -1));
const isTshirtSize = (value)=>tshirtUnitRegex.test(value);
const isAny = ()=>true;
const isLengthOnly = (value)=>// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);
const isNever = ()=>false;
const isShadow = (value)=>shadowRegex.test(value);
const isImage = (value)=>imageRegex.test(value);
const isAnyNonArbitrary = (value)=>!isArbitraryValue(value) && !isArbitraryVariable(value);
const isArbitrarySize = (value)=>getIsArbitraryValue(value, isLabelSize, isNever);
const isArbitraryValue = (value)=>arbitraryValueRegex.test(value);
const isArbitraryLength = (value)=>getIsArbitraryValue(value, isLabelLength, isLengthOnly);
const isArbitraryNumber = (value)=>getIsArbitraryValue(value, isLabelNumber, isNumber);
const isArbitraryPosition = (value)=>getIsArbitraryValue(value, isLabelPosition, isNever);
const isArbitraryImage = (value)=>getIsArbitraryValue(value, isLabelImage, isImage);
const isArbitraryShadow = (value)=>getIsArbitraryValue(value, isLabelShadow, isShadow);
const isArbitraryVariable = (value)=>arbitraryVariableRegex.test(value);
const isArbitraryVariableLength = (value)=>getIsArbitraryVariable(value, isLabelLength);
const isArbitraryVariableFamilyName = (value)=>getIsArbitraryVariable(value, isLabelFamilyName);
const isArbitraryVariablePosition = (value)=>getIsArbitraryVariable(value, isLabelPosition);
const isArbitraryVariableSize = (value)=>getIsArbitraryVariable(value, isLabelSize);
const isArbitraryVariableImage = (value)=>getIsArbitraryVariable(value, isLabelImage);
const isArbitraryVariableShadow = (value)=>getIsArbitraryVariable(value, isLabelShadow, true);
// Helpers
const getIsArbitraryValue = (value, testLabel, testValue)=>{
    const result = arbitraryValueRegex.exec(value);
    if (result) {
        if (result[1]) {
            return testLabel(result[1]);
        }
        return testValue(result[2]);
    }
    return false;
};
const getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false)=>{
    const result = arbitraryVariableRegex.exec(value);
    if (result) {
        if (result[1]) {
            return testLabel(result[1]);
        }
        return shouldMatchNoLabel;
    }
    return false;
};
// Labels
const isLabelPosition = (label)=>label === 'position' || label === 'percentage';
const isLabelImage = (label)=>label === 'image' || label === 'url';
const isLabelSize = (label)=>label === 'length' || label === 'size' || label === 'bg-size';
const isLabelLength = (label)=>label === 'length';
const isLabelNumber = (label)=>label === 'number';
const isLabelFamilyName = (label)=>label === 'family-name';
const isLabelShadow = (label)=>label === 'shadow';
const validators = /*#__PURE__*/ Object.defineProperty({
    __proto__: null,
    isAny,
    isAnyNonArbitrary,
    isArbitraryImage,
    isArbitraryLength,
    isArbitraryNumber,
    isArbitraryPosition,
    isArbitraryShadow,
    isArbitrarySize,
    isArbitraryValue,
    isArbitraryVariable,
    isArbitraryVariableFamilyName,
    isArbitraryVariableImage,
    isArbitraryVariableLength,
    isArbitraryVariablePosition,
    isArbitraryVariableShadow,
    isArbitraryVariableSize,
    isFraction,
    isInteger,
    isNumber,
    isPercent,
    isTshirtSize
}, Symbol.toStringTag, {
    value: 'Module'
});
const getDefaultConfig = ()=>{
    /**
   * Theme getters for theme variable namespaces
   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces
   */ /***/ const themeColor = fromTheme('color');
    const themeFont = fromTheme('font');
    const themeText = fromTheme('text');
    const themeFontWeight = fromTheme('font-weight');
    const themeTracking = fromTheme('tracking');
    const themeLeading = fromTheme('leading');
    const themeBreakpoint = fromTheme('breakpoint');
    const themeContainer = fromTheme('container');
    const themeSpacing = fromTheme('spacing');
    const themeRadius = fromTheme('radius');
    const themeShadow = fromTheme('shadow');
    const themeInsetShadow = fromTheme('inset-shadow');
    const themeTextShadow = fromTheme('text-shadow');
    const themeDropShadow = fromTheme('drop-shadow');
    const themeBlur = fromTheme('blur');
    const themePerspective = fromTheme('perspective');
    const themeAspect = fromTheme('aspect');
    const themeEase = fromTheme('ease');
    const themeAnimate = fromTheme('animate');
    /**
   * Helpers to avoid repeating the same scales
   *
   * We use functions that create a new array every time they're called instead of static arrays.
   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.
   */ /***/ const scaleBreak = ()=>[
            'auto',
            'avoid',
            'all',
            'avoid-page',
            'page',
            'left',
            'right',
            'column'
        ];
    const scalePosition = ()=>[
            'center',
            'top',
            'bottom',
            'left',
            'right',
            'top-left',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'left-top',
            'top-right',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'right-top',
            'bottom-right',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'right-bottom',
            'bottom-left',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'left-bottom'
        ];
    const scalePositionWithArbitrary = ()=>[
            ...scalePosition(),
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleOverflow = ()=>[
            'auto',
            'hidden',
            'clip',
            'visible',
            'scroll'
        ];
    const scaleOverscroll = ()=>[
            'auto',
            'contain',
            'none'
        ];
    const scaleUnambiguousSpacing = ()=>[
            isArbitraryVariable,
            isArbitraryValue,
            themeSpacing
        ];
    const scaleInset = ()=>[
            isFraction,
            'full',
            'auto',
            ...scaleUnambiguousSpacing()
        ];
    const scaleGridTemplateColsRows = ()=>[
            isInteger,
            'none',
            'subgrid',
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleGridColRowStartAndEnd = ()=>[
            'auto',
            {
                span: [
                    'full',
                    isInteger,
                    isArbitraryVariable,
                    isArbitraryValue
                ]
            },
            isInteger,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleGridColRowStartOrEnd = ()=>[
            isInteger,
            'auto',
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleGridAutoColsRows = ()=>[
            'auto',
            'min',
            'max',
            'fr',
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleAlignPrimaryAxis = ()=>[
            'start',
            'end',
            'center',
            'between',
            'around',
            'evenly',
            'stretch',
            'baseline',
            'center-safe',
            'end-safe'
        ];
    const scaleAlignSecondaryAxis = ()=>[
            'start',
            'end',
            'center',
            'stretch',
            'center-safe',
            'end-safe'
        ];
    const scaleMargin = ()=>[
            'auto',
            ...scaleUnambiguousSpacing()
        ];
    const scaleSizing = ()=>[
            isFraction,
            'auto',
            'full',
            'dvw',
            'dvh',
            'lvw',
            'lvh',
            'svw',
            'svh',
            'min',
            'max',
            'fit',
            ...scaleUnambiguousSpacing()
        ];
    const scaleColor = ()=>[
            themeColor,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleBgPosition = ()=>[
            ...scalePosition(),
            isArbitraryVariablePosition,
            isArbitraryPosition,
            {
                position: [
                    isArbitraryVariable,
                    isArbitraryValue
                ]
            }
        ];
    const scaleBgRepeat = ()=>[
            'no-repeat',
            {
                repeat: [
                    '',
                    'x',
                    'y',
                    'space',
                    'round'
                ]
            }
        ];
    const scaleBgSize = ()=>[
            'auto',
            'cover',
            'contain',
            isArbitraryVariableSize,
            isArbitrarySize,
            {
                size: [
                    isArbitraryVariable,
                    isArbitraryValue
                ]
            }
        ];
    const scaleGradientStopPosition = ()=>[
            isPercent,
            isArbitraryVariableLength,
            isArbitraryLength
        ];
    const scaleRadius = ()=>[
            // Deprecated since Tailwind CSS v4.0.0
            '',
            'none',
            'full',
            themeRadius,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleBorderWidth = ()=>[
            '',
            isNumber,
            isArbitraryVariableLength,
            isArbitraryLength
        ];
    const scaleLineStyle = ()=>[
            'solid',
            'dashed',
            'dotted',
            'double'
        ];
    const scaleBlendMode = ()=>[
            'normal',
            'multiply',
            'screen',
            'overlay',
            'darken',
            'lighten',
            'color-dodge',
            'color-burn',
            'hard-light',
            'soft-light',
            'difference',
            'exclusion',
            'hue',
            'saturation',
            'color',
            'luminosity'
        ];
    const scaleMaskImagePosition = ()=>[
            isNumber,
            isPercent,
            isArbitraryVariablePosition,
            isArbitraryPosition
        ];
    const scaleBlur = ()=>[
            // Deprecated since Tailwind CSS v4.0.0
            '',
            'none',
            themeBlur,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleRotate = ()=>[
            'none',
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleScale = ()=>[
            'none',
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleSkew = ()=>[
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleTranslate = ()=>[
            isFraction,
            'full',
            ...scaleUnambiguousSpacing()
        ];
    return {
        cacheSize: 500,
        theme: {
            animate: [
                'spin',
                'ping',
                'pulse',
                'bounce'
            ],
            aspect: [
                'video'
            ],
            blur: [
                isTshirtSize
            ],
            breakpoint: [
                isTshirtSize
            ],
            color: [
                isAny
            ],
            container: [
                isTshirtSize
            ],
            'drop-shadow': [
                isTshirtSize
            ],
            ease: [
                'in',
                'out',
                'in-out'
            ],
            font: [
                isAnyNonArbitrary
            ],
            'font-weight': [
                'thin',
                'extralight',
                'light',
                'normal',
                'medium',
                'semibold',
                'bold',
                'extrabold',
                'black'
            ],
            'inset-shadow': [
                isTshirtSize
            ],
            leading: [
                'none',
                'tight',
                'snug',
                'normal',
                'relaxed',
                'loose'
            ],
            perspective: [
                'dramatic',
                'near',
                'normal',
                'midrange',
                'distant',
                'none'
            ],
            radius: [
                isTshirtSize
            ],
            shadow: [
                isTshirtSize
            ],
            spacing: [
                'px',
                isNumber
            ],
            text: [
                isTshirtSize
            ],
            'text-shadow': [
                isTshirtSize
            ],
            tracking: [
                'tighter',
                'tight',
                'normal',
                'wide',
                'wider',
                'widest'
            ]
        },
        classGroups: {
            // --------------
            // --- Layout ---
            // --------------
            /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */ aspect: [
                {
                    aspect: [
                        'auto',
                        'square',
                        isFraction,
                        isArbitraryValue,
                        isArbitraryVariable,
                        themeAspect
                    ]
                }
            ],
            /**
       * Container
       * @see https://tailwindcss.com/docs/container
       * @deprecated since Tailwind CSS v4.0.0
       */ container: [
                'container'
            ],
            /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */ columns: [
                {
                    columns: [
                        isNumber,
                        isArbitraryValue,
                        isArbitraryVariable,
                        themeContainer
                    ]
                }
            ],
            /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */ 'break-after': [
                {
                    'break-after': scaleBreak()
                }
            ],
            /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */ 'break-before': [
                {
                    'break-before': scaleBreak()
                }
            ],
            /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */ 'break-inside': [
                {
                    'break-inside': [
                        'auto',
                        'avoid',
                        'avoid-page',
                        'avoid-column'
                    ]
                }
            ],
            /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */ 'box-decoration': [
                {
                    'box-decoration': [
                        'slice',
                        'clone'
                    ]
                }
            ],
            /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */ box: [
                {
                    box: [
                        'border',
                        'content'
                    ]
                }
            ],
            /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */ display: [
                'block',
                'inline-block',
                'inline',
                'flex',
                'inline-flex',
                'table',
                'inline-table',
                'table-caption',
                'table-cell',
                'table-column',
                'table-column-group',
                'table-footer-group',
                'table-header-group',
                'table-row-group',
                'table-row',
                'flow-root',
                'grid',
                'inline-grid',
                'contents',
                'list-item',
                'hidden'
            ],
            /**
       * Screen Reader Only
       * @see https://tailwindcss.com/docs/display#screen-reader-only
       */ sr: [
                'sr-only',
                'not-sr-only'
            ],
            /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */ float: [
                {
                    float: [
                        'right',
                        'left',
                        'none',
                        'start',
                        'end'
                    ]
                }
            ],
            /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */ clear: [
                {
                    clear: [
                        'left',
                        'right',
                        'both',
                        'none',
                        'start',
                        'end'
                    ]
                }
            ],
            /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */ isolation: [
                'isolate',
                'isolation-auto'
            ],
            /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */ 'object-fit': [
                {
                    object: [
                        'contain',
                        'cover',
                        'fill',
                        'none',
                        'scale-down'
                    ]
                }
            ],
            /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */ 'object-position': [
                {
                    object: scalePositionWithArbitrary()
                }
            ],
            /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */ overflow: [
                {
                    overflow: scaleOverflow()
                }
            ],
            /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */ 'overflow-x': [
                {
                    'overflow-x': scaleOverflow()
                }
            ],
            /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */ 'overflow-y': [
                {
                    'overflow-y': scaleOverflow()
                }
            ],
            /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */ overscroll: [
                {
                    overscroll: scaleOverscroll()
                }
            ],
            /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */ 'overscroll-x': [
                {
                    'overscroll-x': scaleOverscroll()
                }
            ],
            /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */ 'overscroll-y': [
                {
                    'overscroll-y': scaleOverscroll()
                }
            ],
            /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */ position: [
                'static',
                'fixed',
                'absolute',
                'relative',
                'sticky'
            ],
            /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ inset: [
                {
                    inset: scaleInset()
                }
            ],
            /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ 'inset-x': [
                {
                    'inset-x': scaleInset()
                }
            ],
            /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ 'inset-y': [
                {
                    'inset-y': scaleInset()
                }
            ],
            /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ start: [
                {
                    start: scaleInset()
                }
            ],
            /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ end: [
                {
                    end: scaleInset()
                }
            ],
            /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ top: [
                {
                    top: scaleInset()
                }
            ],
            /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ right: [
                {
                    right: scaleInset()
                }
            ],
            /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ bottom: [
                {
                    bottom: scaleInset()
                }
            ],
            /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ left: [
                {
                    left: scaleInset()
                }
            ],
            /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */ visibility: [
                'visible',
                'invisible',
                'collapse'
            ],
            /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */ z: [
                {
                    z: [
                        isInteger,
                        'auto',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // ------------------------
            // --- Flexbox and Grid ---
            // ------------------------
            /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */ basis: [
                {
                    basis: [
                        isFraction,
                        'full',
                        'auto',
                        themeContainer,
                        ...scaleUnambiguousSpacing()
                    ]
                }
            ],
            /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */ 'flex-direction': [
                {
                    flex: [
                        'row',
                        'row-reverse',
                        'col',
                        'col-reverse'
                    ]
                }
            ],
            /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */ 'flex-wrap': [
                {
                    flex: [
                        'nowrap',
                        'wrap',
                        'wrap-reverse'
                    ]
                }
            ],
            /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */ flex: [
                {
                    flex: [
                        isNumber,
                        isFraction,
                        'auto',
                        'initial',
                        'none',
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */ grow: [
                {
                    grow: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */ shrink: [
                {
                    shrink: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */ order: [
                {
                    order: [
                        isInteger,
                        'first',
                        'last',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */ 'grid-cols': [
                {
                    'grid-cols': scaleGridTemplateColsRows()
                }
            ],
            /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */ 'col-start-end': [
                {
                    col: scaleGridColRowStartAndEnd()
                }
            ],
            /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */ 'col-start': [
                {
                    'col-start': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */ 'col-end': [
                {
                    'col-end': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */ 'grid-rows': [
                {
                    'grid-rows': scaleGridTemplateColsRows()
                }
            ],
            /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */ 'row-start-end': [
                {
                    row: scaleGridColRowStartAndEnd()
                }
            ],
            /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */ 'row-start': [
                {
                    'row-start': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */ 'row-end': [
                {
                    'row-end': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */ 'grid-flow': [
                {
                    'grid-flow': [
                        'row',
                        'col',
                        'dense',
                        'row-dense',
                        'col-dense'
                    ]
                }
            ],
            /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */ 'auto-cols': [
                {
                    'auto-cols': scaleGridAutoColsRows()
                }
            ],
            /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */ 'auto-rows': [
                {
                    'auto-rows': scaleGridAutoColsRows()
                }
            ],
            /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */ gap: [
                {
                    gap: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */ 'gap-x': [
                {
                    'gap-x': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */ 'gap-y': [
                {
                    'gap-y': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */ 'justify-content': [
                {
                    justify: [
                        ...scaleAlignPrimaryAxis(),
                        'normal'
                    ]
                }
            ],
            /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */ 'justify-items': [
                {
                    'justify-items': [
                        ...scaleAlignSecondaryAxis(),
                        'normal'
                    ]
                }
            ],
            /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */ 'justify-self': [
                {
                    'justify-self': [
                        'auto',
                        ...scaleAlignSecondaryAxis()
                    ]
                }
            ],
            /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */ 'align-content': [
                {
                    content: [
                        'normal',
                        ...scaleAlignPrimaryAxis()
                    ]
                }
            ],
            /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */ 'align-items': [
                {
                    items: [
                        ...scaleAlignSecondaryAxis(),
                        {
                            baseline: [
                                '',
                                'last'
                            ]
                        }
                    ]
                }
            ],
            /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */ 'align-self': [
                {
                    self: [
                        'auto',
                        ...scaleAlignSecondaryAxis(),
                        {
                            baseline: [
                                '',
                                'last'
                            ]
                        }
                    ]
                }
            ],
            /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */ 'place-content': [
                {
                    'place-content': scaleAlignPrimaryAxis()
                }
            ],
            /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */ 'place-items': [
                {
                    'place-items': [
                        ...scaleAlignSecondaryAxis(),
                        'baseline'
                    ]
                }
            ],
            /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */ 'place-self': [
                {
                    'place-self': [
                        'auto',
                        ...scaleAlignSecondaryAxis()
                    ]
                }
            ],
            // Spacing
            /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */ p: [
                {
                    p: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */ px: [
                {
                    px: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */ py: [
                {
                    py: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */ ps: [
                {
                    ps: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */ pe: [
                {
                    pe: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */ pt: [
                {
                    pt: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */ pr: [
                {
                    pr: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */ pb: [
                {
                    pb: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */ pl: [
                {
                    pl: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */ m: [
                {
                    m: scaleMargin()
                }
            ],
            /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */ mx: [
                {
                    mx: scaleMargin()
                }
            ],
            /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */ my: [
                {
                    my: scaleMargin()
                }
            ],
            /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */ ms: [
                {
                    ms: scaleMargin()
                }
            ],
            /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */ me: [
                {
                    me: scaleMargin()
                }
            ],
            /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */ mt: [
                {
                    mt: scaleMargin()
                }
            ],
            /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */ mr: [
                {
                    mr: scaleMargin()
                }
            ],
            /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */ mb: [
                {
                    mb: scaleMargin()
                }
            ],
            /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */ ml: [
                {
                    ml: scaleMargin()
                }
            ],
            /**
       * Space Between X
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-x': [
                {
                    'space-x': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-x-reverse': [
                'space-x-reverse'
            ],
            /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-y': [
                {
                    'space-y': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-y-reverse': [
                'space-y-reverse'
            ],
            // --------------
            // --- Sizing ---
            // --------------
            /**
       * Size
       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height
       */ size: [
                {
                    size: scaleSizing()
                }
            ],
            /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */ w: [
                {
                    w: [
                        themeContainer,
                        'screen',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */ 'min-w': [
                {
                    'min-w': [
                        themeContainer,
                        'screen',
                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'none',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */ 'max-w': [
                {
                    'max-w': [
                        themeContainer,
                        'screen',
                        'none',
                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'prose',
                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ {
                            screen: [
                                themeBreakpoint
                            ]
                        },
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */ h: [
                {
                    h: [
                        'screen',
                        'lh',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */ 'min-h': [
                {
                    'min-h': [
                        'screen',
                        'lh',
                        'none',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */ 'max-h': [
                {
                    'max-h': [
                        'screen',
                        'lh',
                        ...scaleSizing()
                    ]
                }
            ],
            // ------------------
            // --- Typography ---
            // ------------------
            /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */ 'font-size': [
                {
                    text: [
                        'base',
                        themeText,
                        isArbitraryVariableLength,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */ 'font-smoothing': [
                'antialiased',
                'subpixel-antialiased'
            ],
            /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */ 'font-style': [
                'italic',
                'not-italic'
            ],
            /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */ 'font-weight': [
                {
                    font: [
                        themeFontWeight,
                        isArbitraryVariable,
                        isArbitraryNumber
                    ]
                }
            ],
            /**
       * Font Stretch
       * @see https://tailwindcss.com/docs/font-stretch
       */ 'font-stretch': [
                {
                    'font-stretch': [
                        'ultra-condensed',
                        'extra-condensed',
                        'condensed',
                        'semi-condensed',
                        'normal',
                        'semi-expanded',
                        'expanded',
                        'extra-expanded',
                        'ultra-expanded',
                        isPercent,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */ 'font-family': [
                {
                    font: [
                        isArbitraryVariableFamilyName,
                        isArbitraryValue,
                        themeFont
                    ]
                }
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-normal': [
                'normal-nums'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-ordinal': [
                'ordinal'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-slashed-zero': [
                'slashed-zero'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-figure': [
                'lining-nums',
                'oldstyle-nums'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-spacing': [
                'proportional-nums',
                'tabular-nums'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-fraction': [
                'diagonal-fractions',
                'stacked-fractions'
            ],
            /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */ tracking: [
                {
                    tracking: [
                        themeTracking,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */ 'line-clamp': [
                {
                    'line-clamp': [
                        isNumber,
                        'none',
                        isArbitraryVariable,
                        isArbitraryNumber
                    ]
                }
            ],
            /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */ leading: [
                {
                    leading: [
                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ themeLeading,
                        ...scaleUnambiguousSpacing()
                    ]
                }
            ],
            /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */ 'list-image': [
                {
                    'list-image': [
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */ 'list-style-position': [
                {
                    list: [
                        'inside',
                        'outside'
                    ]
                }
            ],
            /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */ 'list-style-type': [
                {
                    list: [
                        'disc',
                        'decimal',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */ 'text-alignment': [
                {
                    text: [
                        'left',
                        'center',
                        'right',
                        'justify',
                        'start',
                        'end'
                    ]
                }
            ],
            /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://v3.tailwindcss.com/docs/placeholder-color
       */ 'placeholder-color': [
                {
                    placeholder: scaleColor()
                }
            ],
            /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */ 'text-color': [
                {
                    text: scaleColor()
                }
            ],
            /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */ 'text-decoration': [
                'underline',
                'overline',
                'line-through',
                'no-underline'
            ],
            /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */ 'text-decoration-style': [
                {
                    decoration: [
                        ...scaleLineStyle(),
                        'wavy'
                    ]
                }
            ],
            /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */ 'text-decoration-thickness': [
                {
                    decoration: [
                        isNumber,
                        'from-font',
                        'auto',
                        isArbitraryVariable,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */ 'text-decoration-color': [
                {
                    decoration: scaleColor()
                }
            ],
            /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */ 'underline-offset': [
                {
                    'underline-offset': [
                        isNumber,
                        'auto',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */ 'text-transform': [
                'uppercase',
                'lowercase',
                'capitalize',
                'normal-case'
            ],
            /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */ 'text-overflow': [
                'truncate',
                'text-ellipsis',
                'text-clip'
            ],
            /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */ 'text-wrap': [
                {
                    text: [
                        'wrap',
                        'nowrap',
                        'balance',
                        'pretty'
                    ]
                }
            ],
            /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */ indent: [
                {
                    indent: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */ 'vertical-align': [
                {
                    align: [
                        'baseline',
                        'top',
                        'middle',
                        'bottom',
                        'text-top',
                        'text-bottom',
                        'sub',
                        'super',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */ whitespace: [
                {
                    whitespace: [
                        'normal',
                        'nowrap',
                        'pre',
                        'pre-line',
                        'pre-wrap',
                        'break-spaces'
                    ]
                }
            ],
            /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */ break: [
                {
                    break: [
                        'normal',
                        'words',
                        'all',
                        'keep'
                    ]
                }
            ],
            /**
       * Overflow Wrap
       * @see https://tailwindcss.com/docs/overflow-wrap
       */ wrap: [
                {
                    wrap: [
                        'break-word',
                        'anywhere',
                        'normal'
                    ]
                }
            ],
            /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */ hyphens: [
                {
                    hyphens: [
                        'none',
                        'manual',
                        'auto'
                    ]
                }
            ],
            /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */ content: [
                {
                    content: [
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // -------------------
            // --- Backgrounds ---
            // -------------------
            /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */ 'bg-attachment': [
                {
                    bg: [
                        'fixed',
                        'local',
                        'scroll'
                    ]
                }
            ],
            /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */ 'bg-clip': [
                {
                    'bg-clip': [
                        'border',
                        'padding',
                        'content',
                        'text'
                    ]
                }
            ],
            /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */ 'bg-origin': [
                {
                    'bg-origin': [
                        'border',
                        'padding',
                        'content'
                    ]
                }
            ],
            /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */ 'bg-position': [
                {
                    bg: scaleBgPosition()
                }
            ],
            /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */ 'bg-repeat': [
                {
                    bg: scaleBgRepeat()
                }
            ],
            /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */ 'bg-size': [
                {
                    bg: scaleBgSize()
                }
            ],
            /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */ 'bg-image': [
                {
                    bg: [
                        'none',
                        {
                            linear: [
                                {
                                    to: [
                                        't',
                                        'tr',
                                        'r',
                                        'br',
                                        'b',
                                        'bl',
                                        'l',
                                        'tl'
                                    ]
                                },
                                isInteger,
                                isArbitraryVariable,
                                isArbitraryValue
                            ],
                            radial: [
                                '',
                                isArbitraryVariable,
                                isArbitraryValue
                            ],
                            conic: [
                                isInteger,
                                isArbitraryVariable,
                                isArbitraryValue
                            ]
                        },
                        isArbitraryVariableImage,
                        isArbitraryImage
                    ]
                }
            ],
            /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */ 'bg-color': [
                {
                    bg: scaleColor()
                }
            ],
            /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-from-pos': [
                {
                    from: scaleGradientStopPosition()
                }
            ],
            /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-via-pos': [
                {
                    via: scaleGradientStopPosition()
                }
            ],
            /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-to-pos': [
                {
                    to: scaleGradientStopPosition()
                }
            ],
            /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-from': [
                {
                    from: scaleColor()
                }
            ],
            /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-via': [
                {
                    via: scaleColor()
                }
            ],
            /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-to': [
                {
                    to: scaleColor()
                }
            ],
            // ---------------
            // --- Borders ---
            // ---------------
            /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */ rounded: [
                {
                    rounded: scaleRadius()
                }
            ],
            /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-s': [
                {
                    'rounded-s': scaleRadius()
                }
            ],
            /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-e': [
                {
                    'rounded-e': scaleRadius()
                }
            ],
            /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-t': [
                {
                    'rounded-t': scaleRadius()
                }
            ],
            /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-r': [
                {
                    'rounded-r': scaleRadius()
                }
            ],
            /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-b': [
                {
                    'rounded-b': scaleRadius()
                }
            ],
            /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-l': [
                {
                    'rounded-l': scaleRadius()
                }
            ],
            /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-ss': [
                {
                    'rounded-ss': scaleRadius()
                }
            ],
            /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-se': [
                {
                    'rounded-se': scaleRadius()
                }
            ],
            /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-ee': [
                {
                    'rounded-ee': scaleRadius()
                }
            ],
            /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-es': [
                {
                    'rounded-es': scaleRadius()
                }
            ],
            /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-tl': [
                {
                    'rounded-tl': scaleRadius()
                }
            ],
            /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-tr': [
                {
                    'rounded-tr': scaleRadius()
                }
            ],
            /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-br': [
                {
                    'rounded-br': scaleRadius()
                }
            ],
            /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-bl': [
                {
                    'rounded-bl': scaleRadius()
                }
            ],
            /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w': [
                {
                    border: scaleBorderWidth()
                }
            ],
            /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-x': [
                {
                    'border-x': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-y': [
                {
                    'border-y': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-s': [
                {
                    'border-s': scaleBorderWidth()
                }
            ],
            /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-e': [
                {
                    'border-e': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-t': [
                {
                    'border-t': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-r': [
                {
                    'border-r': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-b': [
                {
                    'border-b': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-l': [
                {
                    'border-l': scaleBorderWidth()
                }
            ],
            /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-x': [
                {
                    'divide-x': scaleBorderWidth()
                }
            ],
            /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-x-reverse': [
                'divide-x-reverse'
            ],
            /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-y': [
                {
                    'divide-y': scaleBorderWidth()
                }
            ],
            /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-y-reverse': [
                'divide-y-reverse'
            ],
            /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */ 'border-style': [
                {
                    border: [
                        ...scaleLineStyle(),
                        'hidden',
                        'none'
                    ]
                }
            ],
            /**
       * Divide Style
       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style
       */ 'divide-style': [
                {
                    divide: [
                        ...scaleLineStyle(),
                        'hidden',
                        'none'
                    ]
                }
            ],
            /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color': [
                {
                    border: scaleColor()
                }
            ],
            /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-x': [
                {
                    'border-x': scaleColor()
                }
            ],
            /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-y': [
                {
                    'border-y': scaleColor()
                }
            ],
            /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-s': [
                {
                    'border-s': scaleColor()
                }
            ],
            /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-e': [
                {
                    'border-e': scaleColor()
                }
            ],
            /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-t': [
                {
                    'border-t': scaleColor()
                }
            ],
            /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-r': [
                {
                    'border-r': scaleColor()
                }
            ],
            /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-b': [
                {
                    'border-b': scaleColor()
                }
            ],
            /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-l': [
                {
                    'border-l': scaleColor()
                }
            ],
            /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */ 'divide-color': [
                {
                    divide: scaleColor()
                }
            ],
            /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */ 'outline-style': [
                {
                    outline: [
                        ...scaleLineStyle(),
                        'none',
                        'hidden'
                    ]
                }
            ],
            /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */ 'outline-offset': [
                {
                    'outline-offset': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */ 'outline-w': [
                {
                    outline: [
                        '',
                        isNumber,
                        isArbitraryVariableLength,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */ 'outline-color': [
                {
                    outline: scaleColor()
                }
            ],
            // ---------------
            // --- Effects ---
            // ---------------
            /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */ shadow: [
                {
                    shadow: [
                        // Deprecated since Tailwind CSS v4.0.0
                        '',
                        'none',
                        themeShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color
       */ 'shadow-color': [
                {
                    shadow: scaleColor()
                }
            ],
            /**
       * Inset Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow
       */ 'inset-shadow': [
                {
                    'inset-shadow': [
                        'none',
                        themeInsetShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Inset Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color
       */ 'inset-shadow-color': [
                {
                    'inset-shadow': scaleColor()
                }
            ],
            /**
       * Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring
       */ 'ring-w': [
                {
                    ring: scaleBorderWidth()
                }
            ],
            /**
       * Ring Width Inset
       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */ 'ring-w-inset': [
                'ring-inset'
            ],
            /**
       * Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color
       */ 'ring-color': [
                {
                    ring: scaleColor()
                }
            ],
            /**
       * Ring Offset Width
       * @see https://v3.tailwindcss.com/docs/ring-offset-width
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */ 'ring-offset-w': [
                {
                    'ring-offset': [
                        isNumber,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Ring Offset Color
       * @see https://v3.tailwindcss.com/docs/ring-offset-color
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */ 'ring-offset-color': [
                {
                    'ring-offset': scaleColor()
                }
            ],
            /**
       * Inset Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring
       */ 'inset-ring-w': [
                {
                    'inset-ring': scaleBorderWidth()
                }
            ],
            /**
       * Inset Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color
       */ 'inset-ring-color': [
                {
                    'inset-ring': scaleColor()
                }
            ],
            /**
       * Text Shadow
       * @see https://tailwindcss.com/docs/text-shadow
       */ 'text-shadow': [
                {
                    'text-shadow': [
                        'none',
                        themeTextShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Text Shadow Color
       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color
       */ 'text-shadow-color': [
                {
                    'text-shadow': scaleColor()
                }
            ],
            /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */ opacity: [
                {
                    opacity: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */ 'mix-blend': [
                {
                    'mix-blend': [
                        ...scaleBlendMode(),
                        'plus-darker',
                        'plus-lighter'
                    ]
                }
            ],
            /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */ 'bg-blend': [
                {
                    'bg-blend': scaleBlendMode()
                }
            ],
            /**
       * Mask Clip
       * @see https://tailwindcss.com/docs/mask-clip
       */ 'mask-clip': [
                {
                    'mask-clip': [
                        'border',
                        'padding',
                        'content',
                        'fill',
                        'stroke',
                        'view'
                    ]
                },
                'mask-no-clip'
            ],
            /**
       * Mask Composite
       * @see https://tailwindcss.com/docs/mask-composite
       */ 'mask-composite': [
                {
                    mask: [
                        'add',
                        'subtract',
                        'intersect',
                        'exclude'
                    ]
                }
            ],
            /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */ 'mask-image-linear-pos': [
                {
                    'mask-linear': [
                        isNumber
                    ]
                }
            ],
            'mask-image-linear-from-pos': [
                {
                    'mask-linear-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-linear-to-pos': [
                {
                    'mask-linear-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-linear-from-color': [
                {
                    'mask-linear-from': scaleColor()
                }
            ],
            'mask-image-linear-to-color': [
                {
                    'mask-linear-to': scaleColor()
                }
            ],
            'mask-image-t-from-pos': [
                {
                    'mask-t-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-t-to-pos': [
                {
                    'mask-t-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-t-from-color': [
                {
                    'mask-t-from': scaleColor()
                }
            ],
            'mask-image-t-to-color': [
                {
                    'mask-t-to': scaleColor()
                }
            ],
            'mask-image-r-from-pos': [
                {
                    'mask-r-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-r-to-pos': [
                {
                    'mask-r-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-r-from-color': [
                {
                    'mask-r-from': scaleColor()
                }
            ],
            'mask-image-r-to-color': [
                {
                    'mask-r-to': scaleColor()
                }
            ],
            'mask-image-b-from-pos': [
                {
                    'mask-b-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-b-to-pos': [
                {
                    'mask-b-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-b-from-color': [
                {
                    'mask-b-from': scaleColor()
                }
            ],
            'mask-image-b-to-color': [
                {
                    'mask-b-to': scaleColor()
                }
            ],
            'mask-image-l-from-pos': [
                {
                    'mask-l-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-l-to-pos': [
                {
                    'mask-l-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-l-from-color': [
                {
                    'mask-l-from': scaleColor()
                }
            ],
            'mask-image-l-to-color': [
                {
                    'mask-l-to': scaleColor()
                }
            ],
            'mask-image-x-from-pos': [
                {
                    'mask-x-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-x-to-pos': [
                {
                    'mask-x-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-x-from-color': [
                {
                    'mask-x-from': scaleColor()
                }
            ],
            'mask-image-x-to-color': [
                {
                    'mask-x-to': scaleColor()
                }
            ],
            'mask-image-y-from-pos': [
                {
                    'mask-y-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-y-to-pos': [
                {
                    'mask-y-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-y-from-color': [
                {
                    'mask-y-from': scaleColor()
                }
            ],
            'mask-image-y-to-color': [
                {
                    'mask-y-to': scaleColor()
                }
            ],
            'mask-image-radial': [
                {
                    'mask-radial': [
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            'mask-image-radial-from-pos': [
                {
                    'mask-radial-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-radial-to-pos': [
                {
                    'mask-radial-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-radial-from-color': [
                {
                    'mask-radial-from': scaleColor()
                }
            ],
            'mask-image-radial-to-color': [
                {
                    'mask-radial-to': scaleColor()
                }
            ],
            'mask-image-radial-shape': [
                {
                    'mask-radial': [
                        'circle',
                        'ellipse'
                    ]
                }
            ],
            'mask-image-radial-size': [
                {
                    'mask-radial': [
                        {
                            closest: [
                                'side',
                                'corner'
                            ],
                            farthest: [
                                'side',
                                'corner'
                            ]
                        }
                    ]
                }
            ],
            'mask-image-radial-pos': [
                {
                    'mask-radial-at': scalePosition()
                }
            ],
            'mask-image-conic-pos': [
                {
                    'mask-conic': [
                        isNumber
                    ]
                }
            ],
            'mask-image-conic-from-pos': [
                {
                    'mask-conic-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-conic-to-pos': [
                {
                    'mask-conic-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-conic-from-color': [
                {
                    'mask-conic-from': scaleColor()
                }
            ],
            'mask-image-conic-to-color': [
                {
                    'mask-conic-to': scaleColor()
                }
            ],
            /**
       * Mask Mode
       * @see https://tailwindcss.com/docs/mask-mode
       */ 'mask-mode': [
                {
                    mask: [
                        'alpha',
                        'luminance',
                        'match'
                    ]
                }
            ],
            /**
       * Mask Origin
       * @see https://tailwindcss.com/docs/mask-origin
       */ 'mask-origin': [
                {
                    'mask-origin': [
                        'border',
                        'padding',
                        'content',
                        'fill',
                        'stroke',
                        'view'
                    ]
                }
            ],
            /**
       * Mask Position
       * @see https://tailwindcss.com/docs/mask-position
       */ 'mask-position': [
                {
                    mask: scaleBgPosition()
                }
            ],
            /**
       * Mask Repeat
       * @see https://tailwindcss.com/docs/mask-repeat
       */ 'mask-repeat': [
                {
                    mask: scaleBgRepeat()
                }
            ],
            /**
       * Mask Size
       * @see https://tailwindcss.com/docs/mask-size
       */ 'mask-size': [
                {
                    mask: scaleBgSize()
                }
            ],
            /**
       * Mask Type
       * @see https://tailwindcss.com/docs/mask-type
       */ 'mask-type': [
                {
                    'mask-type': [
                        'alpha',
                        'luminance'
                    ]
                }
            ],
            /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */ 'mask-image': [
                {
                    mask: [
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // ---------------
            // --- Filters ---
            // ---------------
            /**
       * Filter
       * @see https://tailwindcss.com/docs/filter
       */ filter: [
                {
                    filter: [
                        // Deprecated since Tailwind CSS v3.0.0
                        '',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */ blur: [
                {
                    blur: scaleBlur()
                }
            ],
            /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */ brightness: [
                {
                    brightness: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */ contrast: [
                {
                    contrast: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */ 'drop-shadow': [
                {
                    'drop-shadow': [
                        // Deprecated since Tailwind CSS v4.0.0
                        '',
                        'none',
                        themeDropShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Drop Shadow Color
       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color
       */ 'drop-shadow-color': [
                {
                    'drop-shadow': scaleColor()
                }
            ],
            /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */ grayscale: [
                {
                    grayscale: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */ 'hue-rotate': [
                {
                    'hue-rotate': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */ invert: [
                {
                    invert: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */ saturate: [
                {
                    saturate: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */ sepia: [
                {
                    sepia: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Filter
       * @see https://tailwindcss.com/docs/backdrop-filter
       */ 'backdrop-filter': [
                {
                    'backdrop-filter': [
                        // Deprecated since Tailwind CSS v3.0.0
                        '',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */ 'backdrop-blur': [
                {
                    'backdrop-blur': scaleBlur()
                }
            ],
            /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */ 'backdrop-brightness': [
                {
                    'backdrop-brightness': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */ 'backdrop-contrast': [
                {
                    'backdrop-contrast': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */ 'backdrop-grayscale': [
                {
                    'backdrop-grayscale': [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */ 'backdrop-hue-rotate': [
                {
                    'backdrop-hue-rotate': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */ 'backdrop-invert': [
                {
                    'backdrop-invert': [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */ 'backdrop-opacity': [
                {
                    'backdrop-opacity': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */ 'backdrop-saturate': [
                {
                    'backdrop-saturate': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */ 'backdrop-sepia': [
                {
                    'backdrop-sepia': [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // --------------
            // --- Tables ---
            // --------------
            /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */ 'border-collapse': [
                {
                    border: [
                        'collapse',
                        'separate'
                    ]
                }
            ],
            /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */ 'border-spacing': [
                {
                    'border-spacing': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */ 'border-spacing-x': [
                {
                    'border-spacing-x': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */ 'border-spacing-y': [
                {
                    'border-spacing-y': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */ 'table-layout': [
                {
                    table: [
                        'auto',
                        'fixed'
                    ]
                }
            ],
            /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */ caption: [
                {
                    caption: [
                        'top',
                        'bottom'
                    ]
                }
            ],
            // ---------------------------------
            // --- Transitions and Animation ---
            // ---------------------------------
            /**
       * Transition Property
       * @see https://tailwindcss.com/docs/transition-property
       */ transition: [
                {
                    transition: [
                        '',
                        'all',
                        'colors',
                        'opacity',
                        'shadow',
                        'transform',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Transition Behavior
       * @see https://tailwindcss.com/docs/transition-behavior
       */ 'transition-behavior': [
                {
                    transition: [
                        'normal',
                        'discrete'
                    ]
                }
            ],
            /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */ duration: [
                {
                    duration: [
                        isNumber,
                        'initial',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */ ease: [
                {
                    ease: [
                        'linear',
                        'initial',
                        themeEase,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */ delay: [
                {
                    delay: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */ animate: [
                {
                    animate: [
                        'none',
                        themeAnimate,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // ------------------
            // --- Transforms ---
            // ------------------
            /**
       * Backface Visibility
       * @see https://tailwindcss.com/docs/backface-visibility
       */ backface: [
                {
                    backface: [
                        'hidden',
                        'visible'
                    ]
                }
            ],
            /**
       * Perspective
       * @see https://tailwindcss.com/docs/perspective
       */ perspective: [
                {
                    perspective: [
                        themePerspective,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Perspective Origin
       * @see https://tailwindcss.com/docs/perspective-origin
       */ 'perspective-origin': [
                {
                    'perspective-origin': scalePositionWithArbitrary()
                }
            ],
            /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */ rotate: [
                {
                    rotate: scaleRotate()
                }
            ],
            /**
       * Rotate X
       * @see https://tailwindcss.com/docs/rotate
       */ 'rotate-x': [
                {
                    'rotate-x': scaleRotate()
                }
            ],
            /**
       * Rotate Y
       * @see https://tailwindcss.com/docs/rotate
       */ 'rotate-y': [
                {
                    'rotate-y': scaleRotate()
                }
            ],
            /**
       * Rotate Z
       * @see https://tailwindcss.com/docs/rotate
       */ 'rotate-z': [
                {
                    'rotate-z': scaleRotate()
                }
            ],
            /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */ scale: [
                {
                    scale: scaleScale()
                }
            ],
            /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-x': [
                {
                    'scale-x': scaleScale()
                }
            ],
            /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-y': [
                {
                    'scale-y': scaleScale()
                }
            ],
            /**
       * Scale Z
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-z': [
                {
                    'scale-z': scaleScale()
                }
            ],
            /**
       * Scale 3D
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-3d': [
                'scale-3d'
            ],
            /**
       * Skew
       * @see https://tailwindcss.com/docs/skew
       */ skew: [
                {
                    skew: scaleSkew()
                }
            ],
            /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */ 'skew-x': [
                {
                    'skew-x': scaleSkew()
                }
            ],
            /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */ 'skew-y': [
                {
                    'skew-y': scaleSkew()
                }
            ],
            /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */ transform: [
                {
                    transform: [
                        isArbitraryVariable,
                        isArbitraryValue,
                        '',
                        'none',
                        'gpu',
                        'cpu'
                    ]
                }
            ],
            /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */ 'transform-origin': [
                {
                    origin: scalePositionWithArbitrary()
                }
            ],
            /**
       * Transform Style
       * @see https://tailwindcss.com/docs/transform-style
       */ 'transform-style': [
                {
                    transform: [
                        '3d',
                        'flat'
                    ]
                }
            ],
            /**
       * Translate
       * @see https://tailwindcss.com/docs/translate
       */ translate: [
                {
                    translate: scaleTranslate()
                }
            ],
            /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-x': [
                {
                    'translate-x': scaleTranslate()
                }
            ],
            /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-y': [
                {
                    'translate-y': scaleTranslate()
                }
            ],
            /**
       * Translate Z
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-z': [
                {
                    'translate-z': scaleTranslate()
                }
            ],
            /**
       * Translate None
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-none': [
                'translate-none'
            ],
            // ---------------------
            // --- Interactivity ---
            // ---------------------
            /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */ accent: [
                {
                    accent: scaleColor()
                }
            ],
            /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */ appearance: [
                {
                    appearance: [
                        'none',
                        'auto'
                    ]
                }
            ],
            /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */ 'caret-color': [
                {
                    caret: scaleColor()
                }
            ],
            /**
       * Color Scheme
       * @see https://tailwindcss.com/docs/color-scheme
       */ 'color-scheme': [
                {
                    scheme: [
                        'normal',
                        'dark',
                        'light',
                        'light-dark',
                        'only-dark',
                        'only-light'
                    ]
                }
            ],
            /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */ cursor: [
                {
                    cursor: [
                        'auto',
                        'default',
                        'pointer',
                        'wait',
                        'text',
                        'move',
                        'help',
                        'not-allowed',
                        'none',
                        'context-menu',
                        'progress',
                        'cell',
                        'crosshair',
                        'vertical-text',
                        'alias',
                        'copy',
                        'no-drop',
                        'grab',
                        'grabbing',
                        'all-scroll',
                        'col-resize',
                        'row-resize',
                        'n-resize',
                        'e-resize',
                        's-resize',
                        'w-resize',
                        'ne-resize',
                        'nw-resize',
                        'se-resize',
                        'sw-resize',
                        'ew-resize',
                        'ns-resize',
                        'nesw-resize',
                        'nwse-resize',
                        'zoom-in',
                        'zoom-out',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Field Sizing
       * @see https://tailwindcss.com/docs/field-sizing
       */ 'field-sizing': [
                {
                    'field-sizing': [
                        'fixed',
                        'content'
                    ]
                }
            ],
            /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */ 'pointer-events': [
                {
                    'pointer-events': [
                        'auto',
                        'none'
                    ]
                }
            ],
            /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */ resize: [
                {
                    resize: [
                        'none',
                        '',
                        'y',
                        'x'
                    ]
                }
            ],
            /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */ 'scroll-behavior': [
                {
                    scroll: [
                        'auto',
                        'smooth'
                    ]
                }
            ],
            /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-m': [
                {
                    'scroll-m': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mx': [
                {
                    'scroll-mx': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-my': [
                {
                    'scroll-my': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-ms': [
                {
                    'scroll-ms': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-me': [
                {
                    'scroll-me': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mt': [
                {
                    'scroll-mt': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mr': [
                {
                    'scroll-mr': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mb': [
                {
                    'scroll-mb': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-ml': [
                {
                    'scroll-ml': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-p': [
                {
                    'scroll-p': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-px': [
                {
                    'scroll-px': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-py': [
                {
                    'scroll-py': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-ps': [
                {
                    'scroll-ps': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pe': [
                {
                    'scroll-pe': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pt': [
                {
                    'scroll-pt': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pr': [
                {
                    'scroll-pr': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pb': [
                {
                    'scroll-pb': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pl': [
                {
                    'scroll-pl': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */ 'snap-align': [
                {
                    snap: [
                        'start',
                        'end',
                        'center',
                        'align-none'
                    ]
                }
            ],
            /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */ 'snap-stop': [
                {
                    snap: [
                        'normal',
                        'always'
                    ]
                }
            ],
            /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */ 'snap-type': [
                {
                    snap: [
                        'none',
                        'x',
                        'y',
                        'both'
                    ]
                }
            ],
            /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */ 'snap-strictness': [
                {
                    snap: [
                        'mandatory',
                        'proximity'
                    ]
                }
            ],
            /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */ touch: [
                {
                    touch: [
                        'auto',
                        'none',
                        'manipulation'
                    ]
                }
            ],
            /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */ 'touch-x': [
                {
                    'touch-pan': [
                        'x',
                        'left',
                        'right'
                    ]
                }
            ],
            /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */ 'touch-y': [
                {
                    'touch-pan': [
                        'y',
                        'up',
                        'down'
                    ]
                }
            ],
            /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */ 'touch-pz': [
                'touch-pinch-zoom'
            ],
            /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */ select: [
                {
                    select: [
                        'none',
                        'text',
                        'all',
                        'auto'
                    ]
                }
            ],
            /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */ 'will-change': [
                {
                    'will-change': [
                        'auto',
                        'scroll',
                        'contents',
                        'transform',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // -----------
            // --- SVG ---
            // -----------
            /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */ fill: [
                {
                    fill: [
                        'none',
                        ...scaleColor()
                    ]
                }
            ],
            /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */ 'stroke-w': [
                {
                    stroke: [
                        isNumber,
                        isArbitraryVariableLength,
                        isArbitraryLength,
                        isArbitraryNumber
                    ]
                }
            ],
            /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */ stroke: [
                {
                    stroke: [
                        'none',
                        ...scaleColor()
                    ]
                }
            ],
            // ---------------------
            // --- Accessibility ---
            // ---------------------
            /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */ 'forced-color-adjust': [
                {
                    'forced-color-adjust': [
                        'auto',
                        'none'
                    ]
                }
            ]
        },
        conflictingClassGroups: {
            overflow: [
                'overflow-x',
                'overflow-y'
            ],
            overscroll: [
                'overscroll-x',
                'overscroll-y'
            ],
            inset: [
                'inset-x',
                'inset-y',
                'start',
                'end',
                'top',
                'right',
                'bottom',
                'left'
            ],
            'inset-x': [
                'right',
                'left'
            ],
            'inset-y': [
                'top',
                'bottom'
            ],
            flex: [
                'basis',
                'grow',
                'shrink'
            ],
            gap: [
                'gap-x',
                'gap-y'
            ],
            p: [
                'px',
                'py',
                'ps',
                'pe',
                'pt',
                'pr',
                'pb',
                'pl'
            ],
            px: [
                'pr',
                'pl'
            ],
            py: [
                'pt',
                'pb'
            ],
            m: [
                'mx',
                'my',
                'ms',
                'me',
                'mt',
                'mr',
                'mb',
                'ml'
            ],
            mx: [
                'mr',
                'ml'
            ],
            my: [
                'mt',
                'mb'
            ],
            size: [
                'w',
                'h'
            ],
            'font-size': [
                'leading'
            ],
            'fvn-normal': [
                'fvn-ordinal',
                'fvn-slashed-zero',
                'fvn-figure',
                'fvn-spacing',
                'fvn-fraction'
            ],
            'fvn-ordinal': [
                'fvn-normal'
            ],
            'fvn-slashed-zero': [
                'fvn-normal'
            ],
            'fvn-figure': [
                'fvn-normal'
            ],
            'fvn-spacing': [
                'fvn-normal'
            ],
            'fvn-fraction': [
                'fvn-normal'
            ],
            'line-clamp': [
                'display',
                'overflow'
            ],
            rounded: [
                'rounded-s',
                'rounded-e',
                'rounded-t',
                'rounded-r',
                'rounded-b',
                'rounded-l',
                'rounded-ss',
                'rounded-se',
                'rounded-ee',
                'rounded-es',
                'rounded-tl',
                'rounded-tr',
                'rounded-br',
                'rounded-bl'
            ],
            'rounded-s': [
                'rounded-ss',
                'rounded-es'
            ],
            'rounded-e': [
                'rounded-se',
                'rounded-ee'
            ],
            'rounded-t': [
                'rounded-tl',
                'rounded-tr'
            ],
            'rounded-r': [
                'rounded-tr',
                'rounded-br'
            ],
            'rounded-b': [
                'rounded-br',
                'rounded-bl'
            ],
            'rounded-l': [
                'rounded-tl',
                'rounded-bl'
            ],
            'border-spacing': [
                'border-spacing-x',
                'border-spacing-y'
            ],
            'border-w': [
                'border-w-x',
                'border-w-y',
                'border-w-s',
                'border-w-e',
                'border-w-t',
                'border-w-r',
                'border-w-b',
                'border-w-l'
            ],
            'border-w-x': [
                'border-w-r',
                'border-w-l'
            ],
            'border-w-y': [
                'border-w-t',
                'border-w-b'
            ],
            'border-color': [
                'border-color-x',
                'border-color-y',
                'border-color-s',
                'border-color-e',
                'border-color-t',
                'border-color-r',
                'border-color-b',
                'border-color-l'
            ],
            'border-color-x': [
                'border-color-r',
                'border-color-l'
            ],
            'border-color-y': [
                'border-color-t',
                'border-color-b'
            ],
            translate: [
                'translate-x',
                'translate-y',
                'translate-none'
            ],
            'translate-none': [
                'translate',
                'translate-x',
                'translate-y',
                'translate-z'
            ],
            'scroll-m': [
                'scroll-mx',
                'scroll-my',
                'scroll-ms',
                'scroll-me',
                'scroll-mt',
                'scroll-mr',
                'scroll-mb',
                'scroll-ml'
            ],
            'scroll-mx': [
                'scroll-mr',
                'scroll-ml'
            ],
            'scroll-my': [
                'scroll-mt',
                'scroll-mb'
            ],
            'scroll-p': [
                'scroll-px',
                'scroll-py',
                'scroll-ps',
                'scroll-pe',
                'scroll-pt',
                'scroll-pr',
                'scroll-pb',
                'scroll-pl'
            ],
            'scroll-px': [
                'scroll-pr',
                'scroll-pl'
            ],
            'scroll-py': [
                'scroll-pt',
                'scroll-pb'
            ],
            touch: [
                'touch-x',
                'touch-y',
                'touch-pz'
            ],
            'touch-x': [
                'touch'
            ],
            'touch-y': [
                'touch'
            ],
            'touch-pz': [
                'touch'
            ]
        },
        conflictingClassGroupModifiers: {
            'font-size': [
                'leading'
            ]
        },
        orderSensitiveModifiers: [
            '*',
            '**',
            'after',
            'backdrop',
            'before',
            'details-content',
            'file',
            'first-letter',
            'first-line',
            'marker',
            'placeholder',
            'selection'
        ]
    };
};
/**
 * @param baseConfig Config where other config will be merged into. This object will be mutated.
 * @param configExtension Partial config to merge into the `baseConfig`.
 */ const mergeConfigs = (baseConfig, { cacheSize, prefix, experimentalParseClassName, extend = {}, override = {} })=>{
    overrideProperty(baseConfig, 'cacheSize', cacheSize);
    overrideProperty(baseConfig, 'prefix', prefix);
    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);
    overrideConfigProperties(baseConfig.theme, override.theme);
    overrideConfigProperties(baseConfig.classGroups, override.classGroups);
    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);
    overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);
    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);
    mergeConfigProperties(baseConfig.theme, extend.theme);
    mergeConfigProperties(baseConfig.classGroups, extend.classGroups);
    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);
    mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);
    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');
    return baseConfig;
};
const overrideProperty = (baseObject, overrideKey, overrideValue)=>{
    if (overrideValue !== undefined) {
        baseObject[overrideKey] = overrideValue;
    }
};
const overrideConfigProperties = (baseObject, overrideObject)=>{
    if (overrideObject) {
        for(const key in overrideObject){
            overrideProperty(baseObject, key, overrideObject[key]);
        }
    }
};
const mergeConfigProperties = (baseObject, mergeObject)=>{
    if (mergeObject) {
        for(const key in mergeObject){
            mergeArrayProperties(baseObject, mergeObject, key);
        }
    }
};
const mergeArrayProperties = (baseObject, mergeObject, key)=>{
    const mergeValue = mergeObject[key];
    if (mergeValue !== undefined) {
        baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;
    }
};
const extendTailwindMerge = (configExtension, ...createConfig)=>typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(()=>mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);
const twMerge = /*#__PURE__*/ createTailwindMerge(getDefaultConfig);
;
 //# sourceMappingURL=bundle-mjs.mjs.map
}}),
"[project]/node_modules/@radix-ui/react-compose-refs/dist/index.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
// packages/react/compose-refs/src/compose-refs.tsx
__turbopack_context__.s({
    "composeRefs": (()=>composeRefs),
    "useComposedRefs": (()=>useComposedRefs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
function setRef(ref, value) {
    if (typeof ref === "function") {
        return ref(value);
    } else if (ref !== null && ref !== void 0) {
        ref.current = value;
    }
}
function composeRefs(...refs) {
    return (node)=>{
        let hasCleanup = false;
        const cleanups = refs.map((ref)=>{
            const cleanup = setRef(ref, node);
            if (!hasCleanup && typeof cleanup == "function") {
                hasCleanup = true;
            }
            return cleanup;
        });
        if (hasCleanup) {
            return ()=>{
                for(let i = 0; i < cleanups.length; i++){
                    const cleanup = cleanups[i];
                    if (typeof cleanup == "function") {
                        cleanup();
                    } else {
                        setRef(refs[i], null);
                    }
                }
            };
        }
    };
}
function useComposedRefs(...refs) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(composeRefs(...refs), refs);
}
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
module.exports = __turbopack_context__.r("[project]/node_modules/next/dist/server/route-modules/app-page/module.compiled.js [app-ssr] (ecmascript)").vendored['react-ssr'].ReactJsxRuntime; //# sourceMappingURL=react-jsx-runtime.js.map
}}),
"[project]/node_modules/@radix-ui/react-slot/dist/index.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
// src/slot.tsx
__turbopack_context__.s({
    "Root": (()=>Slot),
    "Slot": (()=>Slot),
    "Slottable": (()=>Slottable),
    "createSlot": (()=>createSlot),
    "createSlottable": (()=>createSlottable)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$compose$2d$refs$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-compose-refs/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
;
;
;
// @__NO_SIDE_EFFECTS__
function createSlot(ownerName) {
    const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);
    const Slot2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])((props, forwardedRef)=>{
        const { children, ...slotProps } = props;
        const childrenArray = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Children"].toArray(children);
        const slottable = childrenArray.find(isSlottable);
        if (slottable) {
            const newElement = slottable.props.children;
            const newChildren = childrenArray.map((child)=>{
                if (child === slottable) {
                    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Children"].count(newElement) > 1) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Children"].only(null);
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isValidElement"])(newElement) ? newElement.props.children : null;
                } else {
                    return child;
                }
            });
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(SlotClone, {
                ...slotProps,
                ref: forwardedRef,
                children: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isValidElement"])(newElement) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["cloneElement"])(newElement, void 0, newChildren) : null
            });
        }
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(SlotClone, {
            ...slotProps,
            ref: forwardedRef,
            children
        });
    });
    Slot2.displayName = `${ownerName}.Slot`;
    return Slot2;
}
var Slot = /* @__PURE__ */ createSlot("Slot");
// @__NO_SIDE_EFFECTS__
function createSlotClone(ownerName) {
    const SlotClone = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])((props, forwardedRef)=>{
        const { children, ...slotProps } = props;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isValidElement"])(children)) {
            const childrenRef = getElementRef(children);
            const props2 = mergeProps(slotProps, children.props);
            if (children.type !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"]) {
                props2.ref = forwardedRef ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$compose$2d$refs$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["composeRefs"])(forwardedRef, childrenRef) : childrenRef;
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["cloneElement"])(children, props2);
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Children"].count(children) > 1 ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Children"].only(null) : null;
    });
    SlotClone.displayName = `${ownerName}.SlotClone`;
    return SlotClone;
}
var SLOTTABLE_IDENTIFIER = Symbol("radix.slottable");
// @__NO_SIDE_EFFECTS__
function createSlottable(ownerName) {
    const Slottable2 = ({ children })=>{
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children
        });
    };
    Slottable2.displayName = `${ownerName}.Slottable`;
    Slottable2.__radixId = SLOTTABLE_IDENTIFIER;
    return Slottable2;
}
var Slottable = /* @__PURE__ */ createSlottable("Slottable");
function isSlottable(child) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isValidElement"])(child) && typeof child.type === "function" && "__radixId" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;
}
function mergeProps(slotProps, childProps) {
    const overrideProps = {
        ...childProps
    };
    for(const propName in childProps){
        const slotPropValue = slotProps[propName];
        const childPropValue = childProps[propName];
        const isHandler = /^on[A-Z]/.test(propName);
        if (isHandler) {
            if (slotPropValue && childPropValue) {
                overrideProps[propName] = (...args)=>{
                    const result = childPropValue(...args);
                    slotPropValue(...args);
                    return result;
                };
            } else if (slotPropValue) {
                overrideProps[propName] = slotPropValue;
            }
        } else if (propName === "style") {
            overrideProps[propName] = {
                ...slotPropValue,
                ...childPropValue
            };
        } else if (propName === "className") {
            overrideProps[propName] = [
                slotPropValue,
                childPropValue
            ].filter(Boolean).join(" ");
        }
    }
    return {
        ...slotProps,
        ...overrideProps
    };
}
function getElementRef(element) {
    let getter = Object.getOwnPropertyDescriptor(element.props, "ref")?.get;
    let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
    if (mayWarn) {
        return element.ref;
    }
    getter = Object.getOwnPropertyDescriptor(element, "ref")?.get;
    mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
    if (mayWarn) {
        return element.props.ref;
    }
    return element.props.ref || element.ref;
}
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/class-variance-authority/dist/index.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Copyright 2022 Joe Bell. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */ __turbopack_context__.s({
    "cva": (()=>cva),
    "cx": (()=>cx)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/clsx/dist/clsx.mjs [app-ssr] (ecmascript)");
;
const falsyToString = (value)=>typeof value === "boolean" ? `${value}` : value === 0 ? "0" : value;
const cx = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clsx"];
const cva = (base, config)=>(props)=>{
        var _config_compoundVariants;
        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
        const { variants, defaultVariants } = config;
        const getVariantClassNames = Object.keys(variants).map((variant)=>{
            const variantProp = props === null || props === void 0 ? void 0 : props[variant];
            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];
            if (variantProp === null) return null;
            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);
            return variants[variant][variantKey];
        });
        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{
            let [key, value] = param;
            if (value === undefined) {
                return acc;
            }
            acc[key] = value;
            return acc;
        }, {});
        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{
            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;
            return Object.entries(compoundVariantOptions).every((param)=>{
                let [key, value] = param;
                return Array.isArray(value) ? value.includes({
                    ...defaultVariants,
                    ...propsWithoutUndefined
                }[key]) : ({
                    ...defaultVariants,
                    ...propsWithoutUndefined
                })[key] === value;
            }) ? [
                ...acc,
                cvClass,
                cvClassName
            ] : acc;
        }, []);
        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
    };
}}),
"[project]/node_modules/@radix-ui/react-primitive/dist/index.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
// src/primitive.tsx
__turbopack_context__.s({
    "Primitive": (()=>Primitive),
    "Root": (()=>Root),
    "dispatchDiscreteCustomEvent": (()=>dispatchDiscreteCustomEvent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$dom$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slot$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-slot/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
;
;
;
;
var NODES = [
    "a",
    "button",
    "div",
    "form",
    "h2",
    "h3",
    "img",
    "input",
    "label",
    "li",
    "nav",
    "ol",
    "p",
    "select",
    "span",
    "svg",
    "ul"
];
var Primitive = NODES.reduce((primitive, node)=>{
    const Slot = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slot$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createSlot"])(`Primitive.${node}`);
    const Node = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])((props, forwardedRef)=>{
        const { asChild, ...primitiveProps } = props;
        const Comp = asChild ? Slot : node;
        if (typeof window !== "undefined") {
            window[Symbol.for("radix-ui")] = true;
        }
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(Comp, {
            ...primitiveProps,
            ref: forwardedRef
        });
    });
    Node.displayName = `Primitive.${node}`;
    return {
        ...primitive,
        [node]: Node
    };
}, {});
function dispatchDiscreteCustomEvent(target, event) {
    if (target) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$dom$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["flushSync"])(()=>target.dispatchEvent(event));
}
var Root = Primitive;
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/@radix-ui/react-label/dist/index.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Label": (()=>Label),
    "Root": (()=>Root)
});
// src/label.tsx
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$primitive$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-primitive/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
"use client";
;
;
;
var NAME = "Label";
var Label = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])((props, forwardedRef)=>{
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$primitive$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Primitive"].label, {
        ...props,
        ref: forwardedRef,
        onMouseDown: (event)=>{
            const target = event.target;
            if (target.closest("button, input, select, textarea")) return;
            props.onMouseDown?.(event);
            if (!event.defaultPrevented && event.detail > 1) event.preventDefault();
        }
    });
});
Label.displayName = NAME;
var Root = Label;
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/react-phone-input-2/lib/lib.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
module.exports = function(e) {
    var t = {};
    function r(n) {
        if (t[n]) return t[n].exports;
        var a = t[n] = {
            i: n,
            l: !1,
            exports: {}
        };
        return e[n].call(a.exports, a, a.exports, r), a.l = !0, a.exports;
    }
    return r.m = e, r.c = t, r.d = function(e, t, n) {
        r.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: n
        });
    }, r.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        });
    }, r.t = function(e, t) {
        if (1 & t && (e = r(e)), 8 & t) return e;
        if (4 & t && "object" == typeof e && e && e.__esModule) return e;
        var n = Object.create(null);
        if (r.r(n), Object.defineProperty(n, "default", {
            enumerable: !0,
            value: e
        }), 2 & t && "string" != typeof e) for(var a in e)r.d(n, a, (function(t) {
            return e[t];
        }).bind(null, a));
        return n;
    }, r.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default;
        } : function() {
            return e;
        };
        return r.d(t, "a", t), t;
    }, r.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
    }, r.p = "", r(r.s = 9);
}([
    function(e, t) {
        e.exports = __turbopack_context__.r("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
    },
    function(e, t, r) {
        var n;
        /*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/ !function() {
            "use strict";
            var r = {}.hasOwnProperty;
            function a() {
                for(var e = [], t = 0; t < arguments.length; t++){
                    var n = arguments[t];
                    if (n) {
                        var o = typeof n;
                        if ("string" === o || "number" === o) e.push(n);
                        else if (Array.isArray(n) && n.length) {
                            var i = a.apply(null, n);
                            i && e.push(i);
                        } else if ("object" === o) for(var u in n)r.call(n, u) && n[u] && e.push(u);
                    }
                }
                return e.join(" ");
            }
            e.exports ? (a.default = a, e.exports = a) : void 0 === (n = (function() {
                return a;
            }).apply(t, [])) || (e.exports = n);
        }();
    },
    function(e, t, r) {
        (function(t) {
            var r = /^\s+|\s+$/g, n = /^[-+]0x[0-9a-f]+$/i, a = /^0b[01]+$/i, o = /^0o[0-7]+$/i, i = parseInt, u = "object" == typeof t && t && t.Object === Object && t, c = "object" == typeof self && self && self.Object === Object && self, s = u || c || Function("return this")(), l = Object.prototype.toString, f = s.Symbol, d = f ? f.prototype : void 0, p = d ? d.toString : void 0;
            function h(e) {
                if ("string" == typeof e) return e;
                if (y(e)) return p ? p.call(e) : "";
                var t = e + "";
                return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function m(e) {
                var t = typeof e;
                return !!e && ("object" == t || "function" == t);
            }
            function y(e) {
                return "symbol" == typeof e || function(e) {
                    return !!e && "object" == typeof e;
                }(e) && "[object Symbol]" == l.call(e);
            }
            function b(e) {
                return e ? (e = function(e) {
                    if ("number" == typeof e) return e;
                    if (y(e)) return NaN;
                    if (m(e)) {
                        var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                        e = m(t) ? t + "" : t;
                    }
                    if ("string" != typeof e) return 0 === e ? e : +e;
                    e = e.replace(r, "");
                    var u = a.test(e);
                    return u || o.test(e) ? i(e.slice(2), u ? 2 : 8) : n.test(e) ? NaN : +e;
                }(e)) === 1 / 0 || e === -1 / 0 ? 17976931348623157e292 * (e < 0 ? -1 : 1) : e == e ? e : 0 : 0 === e ? e : 0;
            }
            e.exports = function(e, t, r) {
                var n, a, o, i;
                return e = null == (n = e) ? "" : h(n), a = function(e) {
                    var t = b(e), r = t % 1;
                    return t == t ? r ? t - r : t : 0;
                }(r), o = 0, i = e.length, a == a && (void 0 !== i && (a = a <= i ? a : i), void 0 !== o && (a = a >= o ? a : o)), r = a, t = h(t), e.slice(r, r + t.length) == t;
            };
        }).call(this, r(3));
    },
    function(e, t) {
        var r;
        r = function() {
            return this;
        }();
        try {
            r = r || new Function("return this")();
        } catch (e) {
            "object" == typeof window && (r = window);
        }
        e.exports = r;
    },
    function(e, t, r) {
        (function(t) {
            var r = /^\[object .+?Constructor\]$/, n = "object" == typeof t && t && t.Object === Object && t, a = "object" == typeof self && self && self.Object === Object && self, o = n || a || Function("return this")();
            var i, u = Array.prototype, c = Function.prototype, s = Object.prototype, l = o["__core-js_shared__"], f = (i = /[^.]+$/.exec(l && l.keys && l.keys.IE_PROTO || "")) ? "Symbol(src)_1." + i : "", d = c.toString, p = s.hasOwnProperty, h = s.toString, m = RegExp("^" + d.call(p).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), y = u.splice, b = x(o, "Map"), g = x(Object, "create");
            function v(e) {
                var t = -1, r = e ? e.length : 0;
                for(this.clear(); ++t < r;){
                    var n = e[t];
                    this.set(n[0], n[1]);
                }
            }
            function C(e) {
                var t = -1, r = e ? e.length : 0;
                for(this.clear(); ++t < r;){
                    var n = e[t];
                    this.set(n[0], n[1]);
                }
            }
            function _(e) {
                var t = -1, r = e ? e.length : 0;
                for(this.clear(); ++t < r;){
                    var n = e[t];
                    this.set(n[0], n[1]);
                }
            }
            function w(e, t) {
                for(var r, n, a = e.length; a--;)if ((r = e[a][0]) === (n = t) || r != r && n != n) return a;
                return -1;
            }
            function S(e) {
                return !(!O(e) || (t = e, f && f in t)) && ((function(e) {
                    var t = O(e) ? h.call(e) : "";
                    return "[object Function]" == t || "[object GeneratorFunction]" == t;
                })(e) || function(e) {
                    var t = !1;
                    if (null != e && "function" != typeof e.toString) try {
                        t = !!(e + "");
                    } catch (e) {}
                    return t;
                }(e) ? m : r).test(function(e) {
                    if (null != e) {
                        try {
                            return d.call(e);
                        } catch (e) {}
                        try {
                            return e + "";
                        } catch (e) {}
                    }
                    return "";
                }(e));
                "TURBOPACK unreachable";
                var t;
            }
            function j(e, t) {
                var r, n, a = e.__data__;
                return ("string" == (n = typeof (r = t)) || "number" == n || "symbol" == n || "boolean" == n ? "__proto__" !== r : null === r) ? a["string" == typeof t ? "string" : "hash"] : a.map;
            }
            function x(e, t) {
                var r = function(e, t) {
                    return null == e ? void 0 : e[t];
                }(e, t);
                return S(r) ? r : void 0;
            }
            function N(e, t) {
                if ("function" != typeof e || t && "function" != typeof t) throw new TypeError("Expected a function");
                var r = function() {
                    var n = arguments, a = t ? t.apply(this, n) : n[0], o = r.cache;
                    if (o.has(a)) return o.get(a);
                    var i = e.apply(this, n);
                    return r.cache = o.set(a, i), i;
                };
                return r.cache = new (N.Cache || _), r;
            }
            function O(e) {
                var t = typeof e;
                return !!e && ("object" == t || "function" == t);
            }
            v.prototype.clear = function() {
                this.__data__ = g ? g(null) : {};
            }, v.prototype.delete = function(e) {
                return this.has(e) && delete this.__data__[e];
            }, v.prototype.get = function(e) {
                var t = this.__data__;
                if (g) {
                    var r = t[e];
                    return "__lodash_hash_undefined__" === r ? void 0 : r;
                }
                return p.call(t, e) ? t[e] : void 0;
            }, v.prototype.has = function(e) {
                var t = this.__data__;
                return g ? void 0 !== t[e] : p.call(t, e);
            }, v.prototype.set = function(e, t) {
                return this.__data__[e] = g && void 0 === t ? "__lodash_hash_undefined__" : t, this;
            }, C.prototype.clear = function() {
                this.__data__ = [];
            }, C.prototype.delete = function(e) {
                var t = this.__data__, r = w(t, e);
                return !(r < 0) && (r == t.length - 1 ? t.pop() : y.call(t, r, 1), !0);
            }, C.prototype.get = function(e) {
                var t = this.__data__, r = w(t, e);
                return r < 0 ? void 0 : t[r][1];
            }, C.prototype.has = function(e) {
                return w(this.__data__, e) > -1;
            }, C.prototype.set = function(e, t) {
                var r = this.__data__, n = w(r, e);
                return n < 0 ? r.push([
                    e,
                    t
                ]) : r[n][1] = t, this;
            }, _.prototype.clear = function() {
                this.__data__ = {
                    hash: new v,
                    map: new (b || C),
                    string: new v
                };
            }, _.prototype.delete = function(e) {
                return j(this, e).delete(e);
            }, _.prototype.get = function(e) {
                return j(this, e).get(e);
            }, _.prototype.has = function(e) {
                return j(this, e).has(e);
            }, _.prototype.set = function(e, t) {
                return j(this, e).set(e, t), this;
            }, N.Cache = _, e.exports = N;
        }).call(this, r(3));
    },
    function(e, t, r) {
        (function(t) {
            var r = /^\s+|\s+$/g, n = /^[-+]0x[0-9a-f]+$/i, a = /^0b[01]+$/i, o = /^0o[0-7]+$/i, i = parseInt, u = "object" == typeof t && t && t.Object === Object && t, c = "object" == typeof self && self && self.Object === Object && self, s = u || c || Function("return this")(), l = Object.prototype.toString, f = Math.max, d = Math.min, p = function() {
                return s.Date.now();
            };
            function h(e) {
                var t = typeof e;
                return !!e && ("object" == t || "function" == t);
            }
            function m(e) {
                if ("number" == typeof e) return e;
                if (function(e) {
                    return "symbol" == typeof e || function(e) {
                        return !!e && "object" == typeof e;
                    }(e) && "[object Symbol]" == l.call(e);
                }(e)) return NaN;
                if (h(e)) {
                    var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                    e = h(t) ? t + "" : t;
                }
                if ("string" != typeof e) return 0 === e ? e : +e;
                e = e.replace(r, "");
                var u = a.test(e);
                return u || o.test(e) ? i(e.slice(2), u ? 2 : 8) : n.test(e) ? NaN : +e;
            }
            e.exports = function(e, t, r) {
                var n, a, o, i, u, c, s = 0, l = !1, y = !1, b = !0;
                if ("function" != typeof e) throw new TypeError("Expected a function");
                function g(t) {
                    var r = n, o = a;
                    return n = a = void 0, s = t, i = e.apply(o, r);
                }
                function v(e) {
                    return s = e, u = setTimeout(_, t), l ? g(e) : i;
                }
                function C(e) {
                    var r = e - c;
                    return void 0 === c || r >= t || r < 0 || y && e - s >= o;
                }
                function _() {
                    var e = p();
                    if (C(e)) return w(e);
                    u = setTimeout(_, function(e) {
                        var r = t - (e - c);
                        return y ? d(r, o - (e - s)) : r;
                    }(e));
                }
                function w(e) {
                    return u = void 0, b && n ? g(e) : (n = a = void 0, i);
                }
                function S() {
                    var e = p(), r = C(e);
                    if (n = arguments, a = this, c = e, r) {
                        if (void 0 === u) return v(c);
                        if (y) return u = setTimeout(_, t), g(c);
                    }
                    return void 0 === u && (u = setTimeout(_, t)), i;
                }
                return t = m(t) || 0, h(r) && (l = !!r.leading, o = (y = "maxWait" in r) ? f(m(r.maxWait) || 0, t) : o, b = "trailing" in r ? !!r.trailing : b), S.cancel = function() {
                    void 0 !== u && clearTimeout(u), s = 0, n = c = a = u = void 0;
                }, S.flush = function() {
                    return void 0 === u ? i : w(p());
                }, S;
            };
        }).call(this, r(3));
    },
    function(e, t, r) {
        (function(e, r) {
            var n = "[object Arguments]", a = "[object Map]", o = "[object Object]", i = "[object Set]", u = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, c = /^\w*$/, s = /^\./, l = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, f = /\\(\\)?/g, d = /^\[object .+?Constructor\]$/, p = /^(?:0|[1-9]\d*)$/, h = {};
            h["[object Float32Array]"] = h["[object Float64Array]"] = h["[object Int8Array]"] = h["[object Int16Array]"] = h["[object Int32Array]"] = h["[object Uint8Array]"] = h["[object Uint8ClampedArray]"] = h["[object Uint16Array]"] = h["[object Uint32Array]"] = !0, h[n] = h["[object Array]"] = h["[object ArrayBuffer]"] = h["[object Boolean]"] = h["[object DataView]"] = h["[object Date]"] = h["[object Error]"] = h["[object Function]"] = h[a] = h["[object Number]"] = h[o] = h["[object RegExp]"] = h[i] = h["[object String]"] = h["[object WeakMap]"] = !1;
            var m = "object" == typeof e && e && e.Object === Object && e, y = "object" == typeof self && self && self.Object === Object && self, b = m || y || Function("return this")(), g = t && !t.nodeType && t, v = g && "object" == typeof r && r && !r.nodeType && r, C = v && v.exports === g && m.process, _ = function() {
                try {
                    return C && C.binding("util");
                } catch (e) {}
            }(), w = _ && _.isTypedArray;
            function S(e, t, r, n) {
                var a = -1, o = e ? e.length : 0;
                for(n && o && (r = e[++a]); ++a < o;)r = t(r, e[a], a, e);
                return r;
            }
            function j(e, t) {
                for(var r = -1, n = e ? e.length : 0; ++r < n;)if (t(e[r], r, e)) return !0;
                return !1;
            }
            function x(e, t, r, n, a) {
                return a(e, function(e, a, o) {
                    r = n ? (n = !1, e) : t(r, e, a, o);
                }), r;
            }
            function N(e) {
                var t = !1;
                if (null != e && "function" != typeof e.toString) try {
                    t = !!(e + "");
                } catch (e) {}
                return t;
            }
            function O(e) {
                var t = -1, r = Array(e.size);
                return e.forEach(function(e, n) {
                    r[++t] = [
                        n,
                        e
                    ];
                }), r;
            }
            function k(e) {
                var t = -1, r = Array(e.size);
                return e.forEach(function(e) {
                    r[++t] = e;
                }), r;
            }
            var E, T, I, A = Array.prototype, D = Function.prototype, P = Object.prototype, F = b["__core-js_shared__"], M = (E = /[^.]+$/.exec(F && F.keys && F.keys.IE_PROTO || "")) ? "Symbol(src)_1." + E : "", R = D.toString, L = P.hasOwnProperty, z = P.toString, B = RegExp("^" + R.call(L).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), G = b.Symbol, $ = b.Uint8Array, V = P.propertyIsEnumerable, K = A.splice, U = (T = Object.keys, I = Object, function(e) {
                return T(I(e));
            }), q = Ne(b, "DataView"), H = Ne(b, "Map"), W = Ne(b, "Promise"), J = Ne(b, "Set"), Z = Ne(b, "WeakMap"), Q = Ne(Object, "create"), Y = Pe(q), X = Pe(H), ee = Pe(W), te = Pe(J), re = Pe(Z), ne = G ? G.prototype : void 0, ae = ne ? ne.valueOf : void 0, oe = ne ? ne.toString : void 0;
            function ie(e) {
                var t = -1, r = e ? e.length : 0;
                for(this.clear(); ++t < r;){
                    var n = e[t];
                    this.set(n[0], n[1]);
                }
            }
            function ue(e) {
                var t = -1, r = e ? e.length : 0;
                for(this.clear(); ++t < r;){
                    var n = e[t];
                    this.set(n[0], n[1]);
                }
            }
            function ce(e) {
                var t = -1, r = e ? e.length : 0;
                for(this.clear(); ++t < r;){
                    var n = e[t];
                    this.set(n[0], n[1]);
                }
            }
            function se(e) {
                var t = -1, r = e ? e.length : 0;
                for(this.__data__ = new ce; ++t < r;)this.add(e[t]);
            }
            function le(e) {
                this.__data__ = new ue(e);
            }
            function fe(e, t) {
                var r = Le(e) || Re(e) ? function(e, t) {
                    for(var r = -1, n = Array(e); ++r < e;)n[r] = t(r);
                    return n;
                }(e.length, String) : [], n = r.length, a = !!n;
                for(var o in e)!t && !L.call(e, o) || a && ("length" == o || ke(o, n)) || r.push(o);
                return r;
            }
            function de(e, t) {
                for(var r = e.length; r--;)if (Me(e[r][0], t)) return r;
                return -1;
            }
            ie.prototype.clear = function() {
                this.__data__ = Q ? Q(null) : {};
            }, ie.prototype.delete = function(e) {
                return this.has(e) && delete this.__data__[e];
            }, ie.prototype.get = function(e) {
                var t = this.__data__;
                if (Q) {
                    var r = t[e];
                    return "__lodash_hash_undefined__" === r ? void 0 : r;
                }
                return L.call(t, e) ? t[e] : void 0;
            }, ie.prototype.has = function(e) {
                var t = this.__data__;
                return Q ? void 0 !== t[e] : L.call(t, e);
            }, ie.prototype.set = function(e, t) {
                return this.__data__[e] = Q && void 0 === t ? "__lodash_hash_undefined__" : t, this;
            }, ue.prototype.clear = function() {
                this.__data__ = [];
            }, ue.prototype.delete = function(e) {
                var t = this.__data__, r = de(t, e);
                return !(r < 0) && (r == t.length - 1 ? t.pop() : K.call(t, r, 1), !0);
            }, ue.prototype.get = function(e) {
                var t = this.__data__, r = de(t, e);
                return r < 0 ? void 0 : t[r][1];
            }, ue.prototype.has = function(e) {
                return de(this.__data__, e) > -1;
            }, ue.prototype.set = function(e, t) {
                var r = this.__data__, n = de(r, e);
                return n < 0 ? r.push([
                    e,
                    t
                ]) : r[n][1] = t, this;
            }, ce.prototype.clear = function() {
                this.__data__ = {
                    hash: new ie,
                    map: new (H || ue),
                    string: new ie
                };
            }, ce.prototype.delete = function(e) {
                return xe(this, e).delete(e);
            }, ce.prototype.get = function(e) {
                return xe(this, e).get(e);
            }, ce.prototype.has = function(e) {
                return xe(this, e).has(e);
            }, ce.prototype.set = function(e, t) {
                return xe(this, e).set(e, t), this;
            }, se.prototype.add = se.prototype.push = function(e) {
                return this.__data__.set(e, "__lodash_hash_undefined__"), this;
            }, se.prototype.has = function(e) {
                return this.__data__.has(e);
            }, le.prototype.clear = function() {
                this.__data__ = new ue;
            }, le.prototype.delete = function(e) {
                return this.__data__.delete(e);
            }, le.prototype.get = function(e) {
                return this.__data__.get(e);
            }, le.prototype.has = function(e) {
                return this.__data__.has(e);
            }, le.prototype.set = function(e, t) {
                var r = this.__data__;
                if (r instanceof ue) {
                    var n = r.__data__;
                    if (!H || n.length < 199) return n.push([
                        e,
                        t
                    ]), this;
                    r = this.__data__ = new ce(n);
                }
                return r.set(e, t), this;
            };
            var pe, he, me = (pe = function(e, t) {
                return e && ye(e, t, qe);
            }, function(e, t) {
                if (null == e) return e;
                if (!ze(e)) return pe(e, t);
                for(var r = e.length, n = he ? r : -1, a = Object(e); (he ? n-- : ++n < r) && !1 !== t(a[n], n, a););
                return e;
            }), ye = function(e) {
                return function(t, r, n) {
                    for(var a = -1, o = Object(t), i = n(t), u = i.length; u--;){
                        var c = i[e ? u : ++a];
                        if (!1 === r(o[c], c, o)) break;
                    }
                    return t;
                };
            }();
            function be(e, t) {
                for(var r = 0, n = (t = Ee(t, e) ? [
                    t
                ] : Se(t)).length; null != e && r < n;)e = e[De(t[r++])];
                return r && r == n ? e : void 0;
            }
            function ge(e, t) {
                return null != e && t in Object(e);
            }
            function ve(e, t, r, u, c) {
                return e === t || (null == e || null == t || !$e(e) && !Ve(t) ? e != e && t != t : function(e, t, r, u, c, s) {
                    var l = Le(e), f = Le(t), d = "[object Array]", p = "[object Array]";
                    l || (d = (d = Oe(e)) == n ? o : d);
                    f || (p = (p = Oe(t)) == n ? o : p);
                    var h = d == o && !N(e), m = p == o && !N(t), y = d == p;
                    if (y && !h) return s || (s = new le), l || Ue(e) ? je(e, t, r, u, c, s) : function(e, t, r, n, o, u, c) {
                        switch(r){
                            case "[object DataView]":
                                if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return !1;
                                e = e.buffer, t = t.buffer;
                            case "[object ArrayBuffer]":
                                return !(e.byteLength != t.byteLength || !n(new $(e), new $(t)));
                            case "[object Boolean]":
                            case "[object Date]":
                            case "[object Number]":
                                return Me(+e, +t);
                            case "[object Error]":
                                return e.name == t.name && e.message == t.message;
                            case "[object RegExp]":
                            case "[object String]":
                                return e == t + "";
                            case a:
                                var s = O;
                            case i:
                                var l = 2 & u;
                                if (s || (s = k), e.size != t.size && !l) return !1;
                                var f = c.get(e);
                                if (f) return f == t;
                                u |= 1, c.set(e, t);
                                var d = je(s(e), s(t), n, o, u, c);
                                return c.delete(e), d;
                            case "[object Symbol]":
                                if (ae) return ae.call(e) == ae.call(t);
                        }
                        return !1;
                    }(e, t, d, r, u, c, s);
                    if (!(2 & c)) {
                        var b = h && L.call(e, "__wrapped__"), g = m && L.call(t, "__wrapped__");
                        if (b || g) {
                            var v = b ? e.value() : e, C = g ? t.value() : t;
                            return s || (s = new le), r(v, C, u, c, s);
                        }
                    }
                    if (!y) return !1;
                    return s || (s = new le), function(e, t, r, n, a, o) {
                        var i = 2 & a, u = qe(e), c = u.length, s = qe(t).length;
                        if (c != s && !i) return !1;
                        var l = c;
                        for(; l--;){
                            var f = u[l];
                            if (!(i ? f in t : L.call(t, f))) return !1;
                        }
                        var d = o.get(e);
                        if (d && o.get(t)) return d == t;
                        var p = !0;
                        o.set(e, t), o.set(t, e);
                        var h = i;
                        for(; ++l < c;){
                            f = u[l];
                            var m = e[f], y = t[f];
                            if (n) var b = i ? n(y, m, f, t, e, o) : n(m, y, f, e, t, o);
                            if (!(void 0 === b ? m === y || r(m, y, n, a, o) : b)) {
                                p = !1;
                                break;
                            }
                            h || (h = "constructor" == f);
                        }
                        if (p && !h) {
                            var g = e.constructor, v = t.constructor;
                            g == v || !("constructor" in e) || !("constructor" in t) || "function" == typeof g && g instanceof g && "function" == typeof v && v instanceof v || (p = !1);
                        }
                        return o.delete(e), o.delete(t), p;
                    }(e, t, r, u, c, s);
                }(e, t, ve, r, u, c));
            }
            function Ce(e) {
                return !(!$e(e) || function(e) {
                    return !!M && M in e;
                }(e)) && (Be(e) || N(e) ? B : d).test(Pe(e));
            }
            function _e(e) {
                return "function" == typeof e ? e : null == e ? He : "object" == typeof e ? Le(e) ? function(e, t) {
                    if (Ee(e) && Te(t)) return Ie(De(e), t);
                    return function(r) {
                        var n = function(e, t, r) {
                            var n = null == e ? void 0 : be(e, t);
                            return void 0 === n ? r : n;
                        }(r, e);
                        return void 0 === n && n === t ? function(e, t) {
                            return null != e && function(e, t, r) {
                                t = Ee(t, e) ? [
                                    t
                                ] : Se(t);
                                var n, a = -1, o = t.length;
                                for(; ++a < o;){
                                    var i = De(t[a]);
                                    if (!(n = null != e && r(e, i))) break;
                                    e = e[i];
                                }
                                if (n) return n;
                                return !!(o = e ? e.length : 0) && Ge(o) && ke(i, o) && (Le(e) || Re(e));
                            }(e, t, ge);
                        }(r, e) : ve(t, n, void 0, 3);
                    };
                }(e[0], e[1]) : function(e) {
                    var t = function(e) {
                        var t = qe(e), r = t.length;
                        for(; r--;){
                            var n = t[r], a = e[n];
                            t[r] = [
                                n,
                                a,
                                Te(a)
                            ];
                        }
                        return t;
                    }(e);
                    if (1 == t.length && t[0][2]) return Ie(t[0][0], t[0][1]);
                    return function(r) {
                        return r === e || function(e, t, r, n) {
                            var a = r.length, o = a, i = !n;
                            if (null == e) return !o;
                            for(e = Object(e); a--;){
                                var u = r[a];
                                if (i && u[2] ? u[1] !== e[u[0]] : !(u[0] in e)) return !1;
                            }
                            for(; ++a < o;){
                                var c = (u = r[a])[0], s = e[c], l = u[1];
                                if (i && u[2]) {
                                    if (void 0 === s && !(c in e)) return !1;
                                } else {
                                    var f = new le;
                                    if (n) var d = n(s, l, c, e, t, f);
                                    if (!(void 0 === d ? ve(l, s, n, 3, f) : d)) return !1;
                                }
                            }
                            return !0;
                        }(r, e, t);
                    };
                }(e) : Ee(t = e) ? (r = De(t), function(e) {
                    return null == e ? void 0 : e[r];
                }) : function(e) {
                    return function(t) {
                        return be(t, e);
                    };
                }(t);
                "TURBOPACK unreachable";
                var t, r;
            }
            function we(e) {
                if (r = (t = e) && t.constructor, n = "function" == typeof r && r.prototype || P, t !== n) return U(e);
                var t, r, n, a = [];
                for(var o in Object(e))L.call(e, o) && "constructor" != o && a.push(o);
                return a;
            }
            function Se(e) {
                return Le(e) ? e : Ae(e);
            }
            function je(e, t, r, n, a, o) {
                var i = 2 & a, u = e.length, c = t.length;
                if (u != c && !(i && c > u)) return !1;
                var s = o.get(e);
                if (s && o.get(t)) return s == t;
                var l = -1, f = !0, d = 1 & a ? new se : void 0;
                for(o.set(e, t), o.set(t, e); ++l < u;){
                    var p = e[l], h = t[l];
                    if (n) var m = i ? n(h, p, l, t, e, o) : n(p, h, l, e, t, o);
                    if (void 0 !== m) {
                        if (m) continue;
                        f = !1;
                        break;
                    }
                    if (d) {
                        if (!j(t, function(e, t) {
                            if (!d.has(t) && (p === e || r(p, e, n, a, o))) return d.add(t);
                        })) {
                            f = !1;
                            break;
                        }
                    } else if (p !== h && !r(p, h, n, a, o)) {
                        f = !1;
                        break;
                    }
                }
                return o.delete(e), o.delete(t), f;
            }
            function xe(e, t) {
                var r, n, a = e.__data__;
                return ("string" == (n = typeof (r = t)) || "number" == n || "symbol" == n || "boolean" == n ? "__proto__" !== r : null === r) ? a["string" == typeof t ? "string" : "hash"] : a.map;
            }
            function Ne(e, t) {
                var r = function(e, t) {
                    return null == e ? void 0 : e[t];
                }(e, t);
                return Ce(r) ? r : void 0;
            }
            var Oe = function(e) {
                return z.call(e);
            };
            function ke(e, t) {
                return !!(t = null == t ? 9007199254740991 : t) && ("number" == typeof e || p.test(e)) && e > -1 && e % 1 == 0 && e < t;
            }
            function Ee(e, t) {
                if (Le(e)) return !1;
                var r = typeof e;
                return !("number" != r && "symbol" != r && "boolean" != r && null != e && !Ke(e)) || c.test(e) || !u.test(e) || null != t && e in Object(t);
            }
            function Te(e) {
                return e == e && !$e(e);
            }
            function Ie(e, t) {
                return function(r) {
                    return null != r && r[e] === t && (void 0 !== t || e in Object(r));
                };
            }
            (q && "[object DataView]" != Oe(new q(new ArrayBuffer(1))) || H && Oe(new H) != a || W && "[object Promise]" != Oe(W.resolve()) || J && Oe(new J) != i || Z && "[object WeakMap]" != Oe(new Z)) && (Oe = function(e) {
                var t = z.call(e), r = t == o ? e.constructor : void 0, n = r ? Pe(r) : void 0;
                if (n) switch(n){
                    case Y:
                        return "[object DataView]";
                    case X:
                        return a;
                    case ee:
                        return "[object Promise]";
                    case te:
                        return i;
                    case re:
                        return "[object WeakMap]";
                }
                return t;
            });
            var Ae = Fe(function(e) {
                var t;
                e = null == (t = e) ? "" : function(e) {
                    if ("string" == typeof e) return e;
                    if (Ke(e)) return oe ? oe.call(e) : "";
                    var t = e + "";
                    return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
                }(t);
                var r = [];
                return s.test(e) && r.push(""), e.replace(l, function(e, t, n, a) {
                    r.push(n ? a.replace(f, "$1") : t || e);
                }), r;
            });
            function De(e) {
                if ("string" == typeof e || Ke(e)) return e;
                var t = e + "";
                return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
            }
            function Pe(e) {
                if (null != e) {
                    try {
                        return R.call(e);
                    } catch (e) {}
                    try {
                        return e + "";
                    } catch (e) {}
                }
                return "";
            }
            function Fe(e, t) {
                if ("function" != typeof e || t && "function" != typeof t) throw new TypeError("Expected a function");
                var r = function() {
                    var n = arguments, a = t ? t.apply(this, n) : n[0], o = r.cache;
                    if (o.has(a)) return o.get(a);
                    var i = e.apply(this, n);
                    return r.cache = o.set(a, i), i;
                };
                return r.cache = new (Fe.Cache || ce), r;
            }
            function Me(e, t) {
                return e === t || e != e && t != t;
            }
            function Re(e) {
                return function(e) {
                    return Ve(e) && ze(e);
                }(e) && L.call(e, "callee") && (!V.call(e, "callee") || z.call(e) == n);
            }
            Fe.Cache = ce;
            var Le = Array.isArray;
            function ze(e) {
                return null != e && Ge(e.length) && !Be(e);
            }
            function Be(e) {
                var t = $e(e) ? z.call(e) : "";
                return "[object Function]" == t || "[object GeneratorFunction]" == t;
            }
            function Ge(e) {
                return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991;
            }
            function $e(e) {
                var t = typeof e;
                return !!e && ("object" == t || "function" == t);
            }
            function Ve(e) {
                return !!e && "object" == typeof e;
            }
            function Ke(e) {
                return "symbol" == typeof e || Ve(e) && "[object Symbol]" == z.call(e);
            }
            var Ue = w ? function(e) {
                return function(t) {
                    return e(t);
                };
            }(w) : function(e) {
                return Ve(e) && Ge(e.length) && !!h[z.call(e)];
            };
            function qe(e) {
                return ze(e) ? fe(e) : we(e);
            }
            function He(e) {
                return e;
            }
            r.exports = function(e, t, r) {
                var n = Le(e) ? S : x, a = arguments.length < 3;
                return n(e, _e(t), r, a, me);
            };
        }).call(this, r(3), r(7)(e));
    },
    function(e, t) {
        e.exports = function(e) {
            return e.webpackPolyfill || (e.deprecate = function() {}, e.paths = [], e.children || (e.children = []), Object.defineProperty(e, "loaded", {
                enumerable: !0,
                get: function() {
                    return e.l;
                }
            }), Object.defineProperty(e, "id", {
                enumerable: !0,
                get: function() {
                    return e.i;
                }
            }), e.webpackPolyfill = 1), e;
        };
    },
    function(e, t) {
        String.prototype.padEnd || (String.prototype.padEnd = function(e, t) {
            return e >>= 0, t = String(void 0 !== t ? t : " "), this.length > e ? String(this) : ((e -= this.length) > t.length && (t += t.repeat(e / t.length)), String(this) + t.slice(0, e));
        });
    },
    function(e, t, r) {
        "use strict";
        function n(e, t, r) {
            return t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function a(e) {
            if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
        }
        function o(e) {
            return function(e) {
                if (Array.isArray(e)) {
                    for(var t = 0, r = new Array(e.length); t < e.length; t++)r[t] = e[t];
                    return r;
                }
            }(e) || a(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
        }
        function i(e) {
            if (Array.isArray(e)) return e;
        }
        function u() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
        function c(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }
        function s(e, t) {
            for(var r = 0; r < t.length; r++){
                var n = t[r];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
            }
        }
        function l(e) {
            return (l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            })(e);
        }
        function f(e) {
            return (f = "function" == typeof Symbol && "symbol" === l(Symbol.iterator) ? function(e) {
                return l(e);
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : l(e);
            })(e);
        }
        function d(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
        }
        function p(e) {
            return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
            })(e);
        }
        function h(e, t) {
            return (h = Object.setPrototypeOf || function(e, t) {
                return e.__proto__ = t, e;
            })(e, t);
        }
        r.r(t);
        var m = r(0), y = r.n(m), b = r(5), g = r.n(b), v = r(4), C = r.n(v), _ = r(6), w = r.n(_), S = r(2), j = r.n(S), x = r(1), N = r.n(x);
        r(8);
        function O(e, t) {
            return i(e) || function(e, t) {
                var r = [], n = !0, a = !1, o = void 0;
                try {
                    for(var i, u = e[Symbol.iterator](); !(n = (i = u.next()).done) && (r.push(i.value), !t || r.length !== t); n = !0);
                } catch (e) {
                    a = !0, o = e;
                } finally{
                    try {
                        n || null == u.return || u.return();
                    } finally{
                        if (a) throw o;
                    }
                }
                return r;
            }(e, t) || u();
        }
        var k = [
            [
                "Afghanistan",
                [
                    "asia"
                ],
                "af",
                "93"
            ],
            [
                "Albania",
                [
                    "europe"
                ],
                "al",
                "355"
            ],
            [
                "Algeria",
                [
                    "africa",
                    "north-africa"
                ],
                "dz",
                "213"
            ],
            [
                "Andorra",
                [
                    "europe"
                ],
                "ad",
                "376"
            ],
            [
                "Angola",
                [
                    "africa"
                ],
                "ao",
                "244"
            ],
            [
                "Antigua and Barbuda",
                [
                    "america",
                    "carribean"
                ],
                "ag",
                "1268"
            ],
            [
                "Argentina",
                [
                    "america",
                    "south-america"
                ],
                "ar",
                "54",
                "(..) ........",
                0,
                [
                    "11",
                    "221",
                    "223",
                    "261",
                    "264",
                    "2652",
                    "280",
                    "2905",
                    "291",
                    "2920",
                    "2966",
                    "299",
                    "341",
                    "342",
                    "343",
                    "351",
                    "376",
                    "379",
                    "381",
                    "3833",
                    "385",
                    "387",
                    "388"
                ]
            ],
            [
                "Armenia",
                [
                    "asia",
                    "ex-ussr"
                ],
                "am",
                "374",
                ".. ......"
            ],
            [
                "Aruba",
                [
                    "america",
                    "carribean"
                ],
                "aw",
                "297"
            ],
            [
                "Australia",
                [
                    "oceania"
                ],
                "au",
                "61",
                "(..) .... ....",
                0,
                [
                    "2",
                    "3",
                    "4",
                    "7",
                    "8",
                    "02",
                    "03",
                    "04",
                    "07",
                    "08"
                ]
            ],
            [
                "Austria",
                [
                    "europe",
                    "eu-union"
                ],
                "at",
                "43"
            ],
            [
                "Azerbaijan",
                [
                    "asia",
                    "ex-ussr"
                ],
                "az",
                "994",
                "(..) ... .. .."
            ],
            [
                "Bahamas",
                [
                    "america",
                    "carribean"
                ],
                "bs",
                "1242"
            ],
            [
                "Bahrain",
                [
                    "middle-east"
                ],
                "bh",
                "973"
            ],
            [
                "Bangladesh",
                [
                    "asia"
                ],
                "bd",
                "880"
            ],
            [
                "Barbados",
                [
                    "america",
                    "carribean"
                ],
                "bb",
                "1246"
            ],
            [
                "Belarus",
                [
                    "europe",
                    "ex-ussr"
                ],
                "by",
                "375",
                "(..) ... .. .."
            ],
            [
                "Belgium",
                [
                    "europe",
                    "eu-union"
                ],
                "be",
                "32",
                "... .. .. .."
            ],
            [
                "Belize",
                [
                    "america",
                    "central-america"
                ],
                "bz",
                "501"
            ],
            [
                "Benin",
                [
                    "africa"
                ],
                "bj",
                "229"
            ],
            [
                "Bhutan",
                [
                    "asia"
                ],
                "bt",
                "975"
            ],
            [
                "Bolivia",
                [
                    "america",
                    "south-america"
                ],
                "bo",
                "591"
            ],
            [
                "Bosnia and Herzegovina",
                [
                    "europe",
                    "ex-yugos"
                ],
                "ba",
                "387"
            ],
            [
                "Botswana",
                [
                    "africa"
                ],
                "bw",
                "267"
            ],
            [
                "Brazil",
                [
                    "america",
                    "south-america"
                ],
                "br",
                "55",
                "(..) ........."
            ],
            [
                "British Indian Ocean Territory",
                [
                    "asia"
                ],
                "io",
                "246"
            ],
            [
                "Brunei",
                [
                    "asia"
                ],
                "bn",
                "673"
            ],
            [
                "Bulgaria",
                [
                    "europe",
                    "eu-union"
                ],
                "bg",
                "359"
            ],
            [
                "Burkina Faso",
                [
                    "africa"
                ],
                "bf",
                "226"
            ],
            [
                "Burundi",
                [
                    "africa"
                ],
                "bi",
                "257"
            ],
            [
                "Cambodia",
                [
                    "asia"
                ],
                "kh",
                "855"
            ],
            [
                "Cameroon",
                [
                    "africa"
                ],
                "cm",
                "237"
            ],
            [
                "Canada",
                [
                    "america",
                    "north-america"
                ],
                "ca",
                "1",
                "(...) ...-....",
                1,
                [
                    "204",
                    "226",
                    "236",
                    "249",
                    "250",
                    "289",
                    "306",
                    "343",
                    "365",
                    "387",
                    "403",
                    "416",
                    "418",
                    "431",
                    "437",
                    "438",
                    "450",
                    "506",
                    "514",
                    "519",
                    "548",
                    "579",
                    "581",
                    "587",
                    "604",
                    "613",
                    "639",
                    "647",
                    "672",
                    "705",
                    "709",
                    "742",
                    "778",
                    "780",
                    "782",
                    "807",
                    "819",
                    "825",
                    "867",
                    "873",
                    "902",
                    "905"
                ]
            ],
            [
                "Cape Verde",
                [
                    "africa"
                ],
                "cv",
                "238"
            ],
            [
                "Caribbean Netherlands",
                [
                    "america",
                    "carribean"
                ],
                "bq",
                "599",
                "",
                1
            ],
            [
                "Central African Republic",
                [
                    "africa"
                ],
                "cf",
                "236"
            ],
            [
                "Chad",
                [
                    "africa"
                ],
                "td",
                "235"
            ],
            [
                "Chile",
                [
                    "america",
                    "south-america"
                ],
                "cl",
                "56"
            ],
            [
                "China",
                [
                    "asia"
                ],
                "cn",
                "86",
                "..-........."
            ],
            [
                "Colombia",
                [
                    "america",
                    "south-america"
                ],
                "co",
                "57",
                "... ... ...."
            ],
            [
                "Comoros",
                [
                    "africa"
                ],
                "km",
                "269"
            ],
            [
                "Congo",
                [
                    "africa"
                ],
                "cd",
                "243"
            ],
            [
                "Congo",
                [
                    "africa"
                ],
                "cg",
                "242"
            ],
            [
                "Costa Rica",
                [
                    "america",
                    "central-america"
                ],
                "cr",
                "506",
                "....-...."
            ],
            [
                "Côte d’Ivoire",
                [
                    "africa"
                ],
                "ci",
                "225",
                ".. .. .. .."
            ],
            [
                "Croatia",
                [
                    "europe",
                    "eu-union",
                    "ex-yugos"
                ],
                "hr",
                "385"
            ],
            [
                "Cuba",
                [
                    "america",
                    "carribean"
                ],
                "cu",
                "53"
            ],
            [
                "Curaçao",
                [
                    "america",
                    "carribean"
                ],
                "cw",
                "599",
                "",
                0
            ],
            [
                "Cyprus",
                [
                    "europe",
                    "eu-union"
                ],
                "cy",
                "357",
                ".. ......"
            ],
            [
                "Czech Republic",
                [
                    "europe",
                    "eu-union"
                ],
                "cz",
                "420",
                "... ... ..."
            ],
            [
                "Denmark",
                [
                    "europe",
                    "eu-union",
                    "baltic"
                ],
                "dk",
                "45",
                ".. .. .. .."
            ],
            [
                "Djibouti",
                [
                    "africa"
                ],
                "dj",
                "253"
            ],
            [
                "Dominica",
                [
                    "america",
                    "carribean"
                ],
                "dm",
                "1767"
            ],
            [
                "Dominican Republic",
                [
                    "america",
                    "carribean"
                ],
                "do",
                "1",
                "",
                2,
                [
                    "809",
                    "829",
                    "849"
                ]
            ],
            [
                "Ecuador",
                [
                    "america",
                    "south-america"
                ],
                "ec",
                "593"
            ],
            [
                "Egypt",
                [
                    "africa",
                    "north-africa"
                ],
                "eg",
                "20"
            ],
            [
                "El Salvador",
                [
                    "america",
                    "central-america"
                ],
                "sv",
                "503",
                "....-...."
            ],
            [
                "Equatorial Guinea",
                [
                    "africa"
                ],
                "gq",
                "240"
            ],
            [
                "Eritrea",
                [
                    "africa"
                ],
                "er",
                "291"
            ],
            [
                "Estonia",
                [
                    "europe",
                    "eu-union",
                    "ex-ussr",
                    "baltic"
                ],
                "ee",
                "372",
                ".... ......"
            ],
            [
                "Ethiopia",
                [
                    "africa"
                ],
                "et",
                "251"
            ],
            [
                "Fiji",
                [
                    "oceania"
                ],
                "fj",
                "679"
            ],
            [
                "Finland",
                [
                    "europe",
                    "eu-union",
                    "baltic"
                ],
                "fi",
                "358",
                ".. ... .. .."
            ],
            [
                "France",
                [
                    "europe",
                    "eu-union"
                ],
                "fr",
                "33",
                ". .. .. .. .."
            ],
            [
                "French Guiana",
                [
                    "america",
                    "south-america"
                ],
                "gf",
                "594"
            ],
            [
                "French Polynesia",
                [
                    "oceania"
                ],
                "pf",
                "689"
            ],
            [
                "Gabon",
                [
                    "africa"
                ],
                "ga",
                "241"
            ],
            [
                "Gambia",
                [
                    "africa"
                ],
                "gm",
                "220"
            ],
            [
                "Georgia",
                [
                    "asia",
                    "ex-ussr"
                ],
                "ge",
                "995"
            ],
            [
                "Germany",
                [
                    "europe",
                    "eu-union",
                    "baltic"
                ],
                "de",
                "49",
                ".... ........"
            ],
            [
                "Ghana",
                [
                    "africa"
                ],
                "gh",
                "233"
            ],
            [
                "Greece",
                [
                    "europe",
                    "eu-union"
                ],
                "gr",
                "30"
            ],
            [
                "Grenada",
                [
                    "america",
                    "carribean"
                ],
                "gd",
                "1473"
            ],
            [
                "Guadeloupe",
                [
                    "america",
                    "carribean"
                ],
                "gp",
                "590",
                "",
                0
            ],
            [
                "Guam",
                [
                    "oceania"
                ],
                "gu",
                "1671"
            ],
            [
                "Guatemala",
                [
                    "america",
                    "central-america"
                ],
                "gt",
                "502",
                "....-...."
            ],
            [
                "Guinea",
                [
                    "africa"
                ],
                "gn",
                "224"
            ],
            [
                "Guinea-Bissau",
                [
                    "africa"
                ],
                "gw",
                "245"
            ],
            [
                "Guyana",
                [
                    "america",
                    "south-america"
                ],
                "gy",
                "592"
            ],
            [
                "Haiti",
                [
                    "america",
                    "carribean"
                ],
                "ht",
                "509",
                "....-...."
            ],
            [
                "Honduras",
                [
                    "america",
                    "central-america"
                ],
                "hn",
                "504"
            ],
            [
                "Hong Kong",
                [
                    "asia"
                ],
                "hk",
                "852",
                ".... ...."
            ],
            [
                "Hungary",
                [
                    "europe",
                    "eu-union"
                ],
                "hu",
                "36"
            ],
            [
                "Iceland",
                [
                    "europe"
                ],
                "is",
                "354",
                "... ...."
            ],
            [
                "India",
                [
                    "asia"
                ],
                "in",
                "91",
                ".....-....."
            ],
            [
                "Indonesia",
                [
                    "asia"
                ],
                "id",
                "62"
            ],
            [
                "Iran",
                [
                    "middle-east"
                ],
                "ir",
                "98",
                "... ... ...."
            ],
            [
                "Iraq",
                [
                    "middle-east"
                ],
                "iq",
                "964"
            ],
            [
                "Ireland",
                [
                    "europe",
                    "eu-union"
                ],
                "ie",
                "353",
                ".. ......."
            ],
            [
                "Israel",
                [
                    "middle-east"
                ],
                "il",
                "972",
                "... ... ...."
            ],
            [
                "Italy",
                [
                    "europe",
                    "eu-union"
                ],
                "it",
                "39",
                "... .......",
                0
            ],
            [
                "Jamaica",
                [
                    "america",
                    "carribean"
                ],
                "jm",
                "1876"
            ],
            [
                "Japan",
                [
                    "asia"
                ],
                "jp",
                "81",
                ".. .... ...."
            ],
            [
                "Jordan",
                [
                    "middle-east"
                ],
                "jo",
                "962"
            ],
            [
                "Kazakhstan",
                [
                    "asia",
                    "ex-ussr"
                ],
                "kz",
                "7",
                "... ...-..-..",
                1,
                [
                    "310",
                    "311",
                    "312",
                    "313",
                    "315",
                    "318",
                    "321",
                    "324",
                    "325",
                    "326",
                    "327",
                    "336",
                    "7172",
                    "73622"
                ]
            ],
            [
                "Kenya",
                [
                    "africa"
                ],
                "ke",
                "254"
            ],
            [
                "Kiribati",
                [
                    "oceania"
                ],
                "ki",
                "686"
            ],
            [
                "Kosovo",
                [
                    "europe",
                    "ex-yugos"
                ],
                "xk",
                "383"
            ],
            [
                "Kuwait",
                [
                    "middle-east"
                ],
                "kw",
                "965"
            ],
            [
                "Kyrgyzstan",
                [
                    "asia",
                    "ex-ussr"
                ],
                "kg",
                "996",
                "... ... ..."
            ],
            [
                "Laos",
                [
                    "asia"
                ],
                "la",
                "856"
            ],
            [
                "Latvia",
                [
                    "europe",
                    "eu-union",
                    "ex-ussr",
                    "baltic"
                ],
                "lv",
                "371",
                ".. ... ..."
            ],
            [
                "Lebanon",
                [
                    "middle-east"
                ],
                "lb",
                "961"
            ],
            [
                "Lesotho",
                [
                    "africa"
                ],
                "ls",
                "266"
            ],
            [
                "Liberia",
                [
                    "africa"
                ],
                "lr",
                "231"
            ],
            [
                "Libya",
                [
                    "africa",
                    "north-africa"
                ],
                "ly",
                "218"
            ],
            [
                "Liechtenstein",
                [
                    "europe"
                ],
                "li",
                "423"
            ],
            [
                "Lithuania",
                [
                    "europe",
                    "eu-union",
                    "ex-ussr",
                    "baltic"
                ],
                "lt",
                "370"
            ],
            [
                "Luxembourg",
                [
                    "europe",
                    "eu-union"
                ],
                "lu",
                "352"
            ],
            [
                "Macau",
                [
                    "asia"
                ],
                "mo",
                "853"
            ],
            [
                "Macedonia",
                [
                    "europe",
                    "ex-yugos"
                ],
                "mk",
                "389"
            ],
            [
                "Madagascar",
                [
                    "africa"
                ],
                "mg",
                "261"
            ],
            [
                "Malawi",
                [
                    "africa"
                ],
                "mw",
                "265"
            ],
            [
                "Malaysia",
                [
                    "asia"
                ],
                "my",
                "60",
                "..-....-...."
            ],
            [
                "Maldives",
                [
                    "asia"
                ],
                "mv",
                "960"
            ],
            [
                "Mali",
                [
                    "africa"
                ],
                "ml",
                "223"
            ],
            [
                "Malta",
                [
                    "europe",
                    "eu-union"
                ],
                "mt",
                "356"
            ],
            [
                "Marshall Islands",
                [
                    "oceania"
                ],
                "mh",
                "692"
            ],
            [
                "Martinique",
                [
                    "america",
                    "carribean"
                ],
                "mq",
                "596"
            ],
            [
                "Mauritania",
                [
                    "africa"
                ],
                "mr",
                "222"
            ],
            [
                "Mauritius",
                [
                    "africa"
                ],
                "mu",
                "230"
            ],
            [
                "Mexico",
                [
                    "america",
                    "central-america"
                ],
                "mx",
                "52",
                "... ... ....",
                0,
                [
                    "55",
                    "81",
                    "33",
                    "656",
                    "664",
                    "998",
                    "774",
                    "229"
                ]
            ],
            [
                "Micronesia",
                [
                    "oceania"
                ],
                "fm",
                "691"
            ],
            [
                "Moldova",
                [
                    "europe"
                ],
                "md",
                "373",
                "(..) ..-..-.."
            ],
            [
                "Monaco",
                [
                    "europe"
                ],
                "mc",
                "377"
            ],
            [
                "Mongolia",
                [
                    "asia"
                ],
                "mn",
                "976"
            ],
            [
                "Montenegro",
                [
                    "europe",
                    "ex-yugos"
                ],
                "me",
                "382"
            ],
            [
                "Morocco",
                [
                    "africa",
                    "north-africa"
                ],
                "ma",
                "212"
            ],
            [
                "Mozambique",
                [
                    "africa"
                ],
                "mz",
                "258"
            ],
            [
                "Myanmar",
                [
                    "asia"
                ],
                "mm",
                "95"
            ],
            [
                "Namibia",
                [
                    "africa"
                ],
                "na",
                "264"
            ],
            [
                "Nauru",
                [
                    "africa"
                ],
                "nr",
                "674"
            ],
            [
                "Nepal",
                [
                    "asia"
                ],
                "np",
                "977"
            ],
            [
                "Netherlands",
                [
                    "europe",
                    "eu-union"
                ],
                "nl",
                "31",
                ".. ........"
            ],
            [
                "New Caledonia",
                [
                    "oceania"
                ],
                "nc",
                "687"
            ],
            [
                "New Zealand",
                [
                    "oceania"
                ],
                "nz",
                "64",
                "...-...-...."
            ],
            [
                "Nicaragua",
                [
                    "america",
                    "central-america"
                ],
                "ni",
                "505"
            ],
            [
                "Niger",
                [
                    "africa"
                ],
                "ne",
                "227"
            ],
            [
                "Nigeria",
                [
                    "africa"
                ],
                "ng",
                "234"
            ],
            [
                "North Korea",
                [
                    "asia"
                ],
                "kp",
                "850"
            ],
            [
                "Norway",
                [
                    "europe",
                    "baltic"
                ],
                "no",
                "47",
                "... .. ..."
            ],
            [
                "Oman",
                [
                    "middle-east"
                ],
                "om",
                "968"
            ],
            [
                "Pakistan",
                [
                    "asia"
                ],
                "pk",
                "92",
                "...-......."
            ],
            [
                "Palau",
                [
                    "oceania"
                ],
                "pw",
                "680"
            ],
            [
                "Palestine",
                [
                    "middle-east"
                ],
                "ps",
                "970"
            ],
            [
                "Panama",
                [
                    "america",
                    "central-america"
                ],
                "pa",
                "507"
            ],
            [
                "Papua New Guinea",
                [
                    "oceania"
                ],
                "pg",
                "675"
            ],
            [
                "Paraguay",
                [
                    "america",
                    "south-america"
                ],
                "py",
                "595"
            ],
            [
                "Peru",
                [
                    "america",
                    "south-america"
                ],
                "pe",
                "51"
            ],
            [
                "Philippines",
                [
                    "asia"
                ],
                "ph",
                "63",
                ".... ......."
            ],
            [
                "Poland",
                [
                    "europe",
                    "eu-union",
                    "baltic"
                ],
                "pl",
                "48",
                "...-...-..."
            ],
            [
                "Portugal",
                [
                    "europe",
                    "eu-union"
                ],
                "pt",
                "351"
            ],
            [
                "Puerto Rico",
                [
                    "america",
                    "carribean"
                ],
                "pr",
                "1",
                "",
                3,
                [
                    "787",
                    "939"
                ]
            ],
            [
                "Qatar",
                [
                    "middle-east"
                ],
                "qa",
                "974"
            ],
            [
                "Réunion",
                [
                    "africa"
                ],
                "re",
                "262"
            ],
            [
                "Romania",
                [
                    "europe",
                    "eu-union"
                ],
                "ro",
                "40"
            ],
            [
                "Russia",
                [
                    "europe",
                    "asia",
                    "ex-ussr",
                    "baltic"
                ],
                "ru",
                "7",
                "(...) ...-..-..",
                0
            ],
            [
                "Rwanda",
                [
                    "africa"
                ],
                "rw",
                "250"
            ],
            [
                "Saint Kitts and Nevis",
                [
                    "america",
                    "carribean"
                ],
                "kn",
                "1869"
            ],
            [
                "Saint Lucia",
                [
                    "america",
                    "carribean"
                ],
                "lc",
                "1758"
            ],
            [
                "Saint Vincent and the Grenadines",
                [
                    "america",
                    "carribean"
                ],
                "vc",
                "1784"
            ],
            [
                "Samoa",
                [
                    "oceania"
                ],
                "ws",
                "685"
            ],
            [
                "San Marino",
                [
                    "europe"
                ],
                "sm",
                "378"
            ],
            [
                "São Tomé and Príncipe",
                [
                    "africa"
                ],
                "st",
                "239"
            ],
            [
                "Saudi Arabia",
                [
                    "middle-east"
                ],
                "sa",
                "966"
            ],
            [
                "Senegal",
                [
                    "africa"
                ],
                "sn",
                "221"
            ],
            [
                "Serbia",
                [
                    "europe",
                    "ex-yugos"
                ],
                "rs",
                "381"
            ],
            [
                "Seychelles",
                [
                    "africa"
                ],
                "sc",
                "248"
            ],
            [
                "Sierra Leone",
                [
                    "africa"
                ],
                "sl",
                "232"
            ],
            [
                "Singapore",
                [
                    "asia"
                ],
                "sg",
                "65",
                "....-...."
            ],
            [
                "Slovakia",
                [
                    "europe",
                    "eu-union"
                ],
                "sk",
                "421"
            ],
            [
                "Slovenia",
                [
                    "europe",
                    "eu-union",
                    "ex-yugos"
                ],
                "si",
                "386"
            ],
            [
                "Solomon Islands",
                [
                    "oceania"
                ],
                "sb",
                "677"
            ],
            [
                "Somalia",
                [
                    "africa"
                ],
                "so",
                "252"
            ],
            [
                "South Africa",
                [
                    "africa"
                ],
                "za",
                "27"
            ],
            [
                "South Korea",
                [
                    "asia"
                ],
                "kr",
                "82",
                "... .... ...."
            ],
            [
                "South Sudan",
                [
                    "africa",
                    "north-africa"
                ],
                "ss",
                "211"
            ],
            [
                "Spain",
                [
                    "europe",
                    "eu-union"
                ],
                "es",
                "34",
                "... ... ..."
            ],
            [
                "Sri Lanka",
                [
                    "asia"
                ],
                "lk",
                "94"
            ],
            [
                "Sudan",
                [
                    "africa"
                ],
                "sd",
                "249"
            ],
            [
                "Suriname",
                [
                    "america",
                    "south-america"
                ],
                "sr",
                "597"
            ],
            [
                "Swaziland",
                [
                    "africa"
                ],
                "sz",
                "268"
            ],
            [
                "Sweden",
                [
                    "europe",
                    "eu-union",
                    "baltic"
                ],
                "se",
                "46",
                "(...) ...-..."
            ],
            [
                "Switzerland",
                [
                    "europe"
                ],
                "ch",
                "41",
                ".. ... .. .."
            ],
            [
                "Syria",
                [
                    "middle-east"
                ],
                "sy",
                "963"
            ],
            [
                "Taiwan",
                [
                    "asia"
                ],
                "tw",
                "886"
            ],
            [
                "Tajikistan",
                [
                    "asia",
                    "ex-ussr"
                ],
                "tj",
                "992"
            ],
            [
                "Tanzania",
                [
                    "africa"
                ],
                "tz",
                "255"
            ],
            [
                "Thailand",
                [
                    "asia"
                ],
                "th",
                "66"
            ],
            [
                "Timor-Leste",
                [
                    "asia"
                ],
                "tl",
                "670"
            ],
            [
                "Togo",
                [
                    "africa"
                ],
                "tg",
                "228"
            ],
            [
                "Tonga",
                [
                    "oceania"
                ],
                "to",
                "676"
            ],
            [
                "Trinidad and Tobago",
                [
                    "america",
                    "carribean"
                ],
                "tt",
                "1868"
            ],
            [
                "Tunisia",
                [
                    "africa",
                    "north-africa"
                ],
                "tn",
                "216"
            ],
            [
                "Turkey",
                [
                    "europe"
                ],
                "tr",
                "90",
                "... ... .. .."
            ],
            [
                "Turkmenistan",
                [
                    "asia",
                    "ex-ussr"
                ],
                "tm",
                "993"
            ],
            [
                "Tuvalu",
                [
                    "asia"
                ],
                "tv",
                "688"
            ],
            [
                "Uganda",
                [
                    "africa"
                ],
                "ug",
                "256"
            ],
            [
                "Ukraine",
                [
                    "europe",
                    "ex-ussr"
                ],
                "ua",
                "380",
                "(..) ... .. .."
            ],
            [
                "United Arab Emirates",
                [
                    "middle-east"
                ],
                "ae",
                "971"
            ],
            [
                "United Kingdom",
                [
                    "europe",
                    "eu-union"
                ],
                "gb",
                "44",
                ".... ......"
            ],
            [
                "United States",
                [
                    "america",
                    "north-america"
                ],
                "us",
                "1",
                "(...) ...-....",
                0,
                [
                    "907",
                    "205",
                    "251",
                    "256",
                    "334",
                    "479",
                    "501",
                    "870",
                    "480",
                    "520",
                    "602",
                    "623",
                    "928",
                    "209",
                    "213",
                    "310",
                    "323",
                    "408",
                    "415",
                    "510",
                    "530",
                    "559",
                    "562",
                    "619",
                    "626",
                    "650",
                    "661",
                    "707",
                    "714",
                    "760",
                    "805",
                    "818",
                    "831",
                    "858",
                    "909",
                    "916",
                    "925",
                    "949",
                    "951",
                    "303",
                    "719",
                    "970",
                    "203",
                    "860",
                    "202",
                    "302",
                    "239",
                    "305",
                    "321",
                    "352",
                    "386",
                    "407",
                    "561",
                    "727",
                    "772",
                    "813",
                    "850",
                    "863",
                    "904",
                    "941",
                    "954",
                    "229",
                    "404",
                    "478",
                    "706",
                    "770",
                    "912",
                    "808",
                    "319",
                    "515",
                    "563",
                    "641",
                    "712",
                    "208",
                    "217",
                    "309",
                    "312",
                    "618",
                    "630",
                    "708",
                    "773",
                    "815",
                    "847",
                    "219",
                    "260",
                    "317",
                    "574",
                    "765",
                    "812",
                    "316",
                    "620",
                    "785",
                    "913",
                    "270",
                    "502",
                    "606",
                    "859",
                    "225",
                    "318",
                    "337",
                    "504",
                    "985",
                    "413",
                    "508",
                    "617",
                    "781",
                    "978",
                    "301",
                    "410",
                    "207",
                    "231",
                    "248",
                    "269",
                    "313",
                    "517",
                    "586",
                    "616",
                    "734",
                    "810",
                    "906",
                    "989",
                    "218",
                    "320",
                    "507",
                    "612",
                    "651",
                    "763",
                    "952",
                    "314",
                    "417",
                    "573",
                    "636",
                    "660",
                    "816",
                    "228",
                    "601",
                    "662",
                    "406",
                    "252",
                    "336",
                    "704",
                    "828",
                    "910",
                    "919",
                    "701",
                    "308",
                    "402",
                    "603",
                    "201",
                    "609",
                    "732",
                    "856",
                    "908",
                    "973",
                    "505",
                    "575",
                    "702",
                    "775",
                    "212",
                    "315",
                    "516",
                    "518",
                    "585",
                    "607",
                    "631",
                    "716",
                    "718",
                    "845",
                    "914",
                    "216",
                    "330",
                    "419",
                    "440",
                    "513",
                    "614",
                    "740",
                    "937",
                    "405",
                    "580",
                    "918",
                    "503",
                    "541",
                    "215",
                    "412",
                    "570",
                    "610",
                    "717",
                    "724",
                    "814",
                    "401",
                    "803",
                    "843",
                    "864",
                    "605",
                    "423",
                    "615",
                    "731",
                    "865",
                    "901",
                    "931",
                    "210",
                    "214",
                    "254",
                    "281",
                    "325",
                    "361",
                    "409",
                    "432",
                    "512",
                    "713",
                    "806",
                    "817",
                    "830",
                    "903",
                    "915",
                    "936",
                    "940",
                    "956",
                    "972",
                    "979",
                    "435",
                    "801",
                    "276",
                    "434",
                    "540",
                    "703",
                    "757",
                    "804",
                    "802",
                    "206",
                    "253",
                    "360",
                    "425",
                    "509",
                    "262",
                    "414",
                    "608",
                    "715",
                    "920",
                    "304",
                    "307"
                ]
            ],
            [
                "Uruguay",
                [
                    "america",
                    "south-america"
                ],
                "uy",
                "598"
            ],
            [
                "Uzbekistan",
                [
                    "asia",
                    "ex-ussr"
                ],
                "uz",
                "998",
                ".. ... .. .."
            ],
            [
                "Vanuatu",
                [
                    "oceania"
                ],
                "vu",
                "678"
            ],
            [
                "Vatican City",
                [
                    "europe"
                ],
                "va",
                "39",
                ".. .... ....",
                1
            ],
            [
                "Venezuela",
                [
                    "america",
                    "south-america"
                ],
                "ve",
                "58"
            ],
            [
                "Vietnam",
                [
                    "asia"
                ],
                "vn",
                "84"
            ],
            [
                "Yemen",
                [
                    "middle-east"
                ],
                "ye",
                "967"
            ],
            [
                "Zambia",
                [
                    "africa"
                ],
                "zm",
                "260"
            ],
            [
                "Zimbabwe",
                [
                    "africa"
                ],
                "zw",
                "263"
            ]
        ], E = [
            [
                "American Samoa",
                [
                    "oceania"
                ],
                "as",
                "1684"
            ],
            [
                "Anguilla",
                [
                    "america",
                    "carribean"
                ],
                "ai",
                "1264"
            ],
            [
                "Bermuda",
                [
                    "america",
                    "north-america"
                ],
                "bm",
                "1441"
            ],
            [
                "British Virgin Islands",
                [
                    "america",
                    "carribean"
                ],
                "vg",
                "1284"
            ],
            [
                "Cayman Islands",
                [
                    "america",
                    "carribean"
                ],
                "ky",
                "1345"
            ],
            [
                "Cook Islands",
                [
                    "oceania"
                ],
                "ck",
                "682"
            ],
            [
                "Falkland Islands",
                [
                    "america",
                    "south-america"
                ],
                "fk",
                "500"
            ],
            [
                "Faroe Islands",
                [
                    "europe"
                ],
                "fo",
                "298"
            ],
            [
                "Gibraltar",
                [
                    "europe"
                ],
                "gi",
                "350"
            ],
            [
                "Greenland",
                [
                    "america"
                ],
                "gl",
                "299"
            ],
            [
                "Jersey",
                [
                    "europe",
                    "eu-union"
                ],
                "je",
                "44",
                ".... ......"
            ],
            [
                "Montserrat",
                [
                    "america",
                    "carribean"
                ],
                "ms",
                "1664"
            ],
            [
                "Niue",
                [
                    "asia"
                ],
                "nu",
                "683"
            ],
            [
                "Norfolk Island",
                [
                    "oceania"
                ],
                "nf",
                "672"
            ],
            [
                "Northern Mariana Islands",
                [
                    "oceania"
                ],
                "mp",
                "1670"
            ],
            [
                "Saint Barthélemy",
                [
                    "america",
                    "carribean"
                ],
                "bl",
                "590",
                "",
                1
            ],
            [
                "Saint Helena",
                [
                    "africa"
                ],
                "sh",
                "290"
            ],
            [
                "Saint Martin",
                [
                    "america",
                    "carribean"
                ],
                "mf",
                "590",
                "",
                2
            ],
            [
                "Saint Pierre and Miquelon",
                [
                    "america",
                    "north-america"
                ],
                "pm",
                "508"
            ],
            [
                "Sint Maarten",
                [
                    "america",
                    "carribean"
                ],
                "sx",
                "1721"
            ],
            [
                "Tokelau",
                [
                    "oceania"
                ],
                "tk",
                "690"
            ],
            [
                "Turks and Caicos Islands",
                [
                    "america",
                    "carribean"
                ],
                "tc",
                "1649"
            ],
            [
                "U.S. Virgin Islands",
                [
                    "america",
                    "carribean"
                ],
                "vi",
                "1340"
            ],
            [
                "Wallis and Futuna",
                [
                    "oceania"
                ],
                "wf",
                "681"
            ]
        ];
        function T(e, t, r, n, a) {
            return !r || a ? e + "".padEnd(t.length, ".") + " " + n : e + "".padEnd(t.length, ".") + " " + r;
        }
        function I(e, t, r, a, i) {
            var u, c, s = [];
            return c = !0 === t, [
                (u = []).concat.apply(u, o(e.map(function(e) {
                    var o = {
                        name: e[0],
                        regions: e[1],
                        iso2: e[2],
                        countryCode: e[3],
                        dialCode: e[3],
                        format: T(r, e[3], e[4], a, i),
                        priority: e[5] || 0
                    }, u = [];
                    return e[6] && e[6].map(function(t) {
                        var r = function(e) {
                            for(var t = 1; t < arguments.length; t++){
                                var r = null != arguments[t] ? arguments[t] : {}, a = Object.keys(r);
                                "function" == typeof Object.getOwnPropertySymbols && (a = a.concat(Object.getOwnPropertySymbols(r).filter(function(e) {
                                    return Object.getOwnPropertyDescriptor(r, e).enumerable;
                                }))), a.forEach(function(t) {
                                    n(e, t, r[t]);
                                });
                            }
                            return e;
                        }({}, o);
                        r.dialCode = e[3] + t, r.isAreaCode = !0, r.areaCodeLength = t.length, u.push(r);
                    }), u.length > 0 ? (o.mainCode = !0, c || "Array" === t.constructor.name && t.includes(e[2]) ? (o.hasAreaCodes = !0, [
                        o
                    ].concat(u)) : (s = s.concat(u), [
                        o
                    ])) : [
                        o
                    ];
                }))),
                s
            ];
        }
        function A(e, t, r, n) {
            if (null !== r) {
                var a = Object.keys(r), o = Object.values(r);
                a.forEach(function(r, a) {
                    if (n) return e.push([
                        r,
                        o[a]
                    ]);
                    var i = e.findIndex(function(e) {
                        return e[0] === r;
                    });
                    if (-1 === i) {
                        var u = [
                            r
                        ];
                        u[t] = o[a], e.push(u);
                    } else e[i][t] = o[a];
                });
            }
        }
        function D(e, t) {
            return 0 === t.length ? e : e.map(function(e) {
                var r = t.findIndex(function(t) {
                    return t[0] === e[2];
                });
                if (-1 === r) return e;
                var n = t[r];
                return n[1] && (e[4] = n[1]), n[3] && (e[5] = n[3]), n[2] && (e[6] = n[2]), e;
            });
        }
        var P = function e(t, r, n, a, i, u, s, l, f, d, p, h, m, y) {
            c(this, e), this.filterRegions = function(e, t) {
                if ("string" == typeof e) {
                    var r = e;
                    return t.filter(function(e) {
                        return e.regions.some(function(e) {
                            return e === r;
                        });
                    });
                }
                return t.filter(function(t) {
                    return e.map(function(e) {
                        return t.regions.some(function(t) {
                            return t === e;
                        });
                    }).some(function(e) {
                        return e;
                    });
                });
            }, this.sortTerritories = function(e, t) {
                var r = [].concat(o(e), o(t));
                return r.sort(function(e, t) {
                    return e.name < t.name ? -1 : e.name > t.name ? 1 : 0;
                }), r;
            }, this.getFilteredCountryList = function(e, t, r) {
                return 0 === e.length ? t : r ? e.map(function(e) {
                    var r = t.find(function(t) {
                        return t.iso2 === e;
                    });
                    if (r) return r;
                }).filter(function(e) {
                    return e;
                }) : t.filter(function(t) {
                    return e.some(function(e) {
                        return e === t.iso2;
                    });
                });
            }, this.localizeCountries = function(e, t, r) {
                for(var n = 0; n < e.length; n++)void 0 !== t[e[n].iso2] ? e[n].localName = t[e[n].iso2] : void 0 !== t[e[n].name] && (e[n].localName = t[e[n].name]);
                return r || e.sort(function(e, t) {
                    return e.localName < t.localName ? -1 : e.localName > t.localName ? 1 : 0;
                }), e;
            }, this.getCustomAreas = function(e, t) {
                for(var r = [], n = 0; n < t.length; n++){
                    var a = JSON.parse(JSON.stringify(e));
                    a.dialCode += t[n], r.push(a);
                }
                return r;
            }, this.excludeCountries = function(e, t) {
                return 0 === t.length ? e : e.filter(function(e) {
                    return !t.includes(e.iso2);
                });
            };
            var b = function(e, t, r) {
                var n = [];
                return A(n, 1, e, !0), A(n, 3, t), A(n, 2, r), n;
            }(l, f, d), g = D(JSON.parse(JSON.stringify(k)), b), v = D(JSON.parse(JSON.stringify(E)), b), C = O(I(g, t, h, m, y), 2), _ = C[0], w = C[1];
            if (r) {
                var S = O(I(v, t, h, m, y), 2), j = S[0];
                S[1];
                _ = this.sortTerritories(j, _);
            }
            n && (_ = this.filterRegions(n, _)), this.onlyCountries = this.localizeCountries(this.excludeCountries(this.getFilteredCountryList(a, _, s.includes("onlyCountries")), u), p, s.includes("onlyCountries")), this.preferredCountries = 0 === i.length ? [] : this.localizeCountries(this.getFilteredCountryList(i, _, s.includes("preferredCountries")), p, s.includes("preferredCountries")), this.hiddenAreaCodes = this.excludeCountries(this.getFilteredCountryList(a, w), u);
        }, F = function(e) {
            function t(e) {
                var r;
                c(this, t), (r = function(e, t) {
                    return !t || "object" !== f(t) && "function" != typeof t ? d(e) : t;
                }(this, p(t).call(this, e))).getProbableCandidate = C()(function(e) {
                    return e && 0 !== e.length ? r.state.onlyCountries.filter(function(t) {
                        return j()(t.name.toLowerCase(), e.toLowerCase());
                    }, d(d(r)))[0] : null;
                }), r.guessSelectedCountry = C()(function(e, t, n, a) {
                    var o;
                    if (!1 === r.props.enableAreaCodes && (a.some(function(t) {
                        if (j()(e, t.dialCode)) return n.some(function(e) {
                            if (t.iso2 === e.iso2 && e.mainCode) return o = e, !0;
                        }), !0;
                    }), o)) return o;
                    var i = n.find(function(e) {
                        return e.iso2 == t;
                    });
                    if ("" === e.trim()) return i;
                    var u = n.reduce(function(t, r) {
                        if (j()(e, r.dialCode)) {
                            if (r.dialCode.length > t.dialCode.length) return r;
                            if (r.dialCode.length === t.dialCode.length && r.priority < t.priority) return r;
                        }
                        return t;
                    }, {
                        dialCode: "",
                        priority: 10001
                    }, d(d(r)));
                    return u.name ? u : i;
                }), r.updateCountry = function(e) {
                    var t, n = r.state.onlyCountries;
                    (t = e.indexOf(0) >= "0" && e.indexOf(0) <= "9" ? n.find(function(t) {
                        return t.dialCode == +e;
                    }) : n.find(function(t) {
                        return t.iso2 == e;
                    })) && t.dialCode && r.setState({
                        selectedCountry: t,
                        formattedNumber: r.props.disableCountryCode ? "" : r.formatNumber(t.dialCode, t)
                    });
                }, r.scrollTo = function(e, t) {
                    if (e) {
                        var n = r.dropdownRef;
                        if (n && document.body) {
                            var a = n.offsetHeight, o = n.getBoundingClientRect().top + document.body.scrollTop, i = o + a, u = e, c = u.getBoundingClientRect(), s = u.offsetHeight, l = c.top + document.body.scrollTop, f = l + s, d = l - o + n.scrollTop, p = a / 2 - s / 2;
                            if (r.props.enableSearch ? l < o + 32 : l < o) t && (d -= p), n.scrollTop = d;
                            else if (f > i) {
                                t && (d += p);
                                var h = a - s;
                                n.scrollTop = d - h;
                            }
                        }
                    }
                }, r.scrollToTop = function() {
                    var e = r.dropdownRef;
                    e && document.body && (e.scrollTop = 0);
                }, r.formatNumber = function(e, t) {
                    if (!t) return e;
                    var n, o = t.format, c = r.props, s = c.disableCountryCode, l = c.enableAreaCodeStretch, f = c.enableLongNumbers, d = c.autoFormat;
                    if (s ? ((n = o.split(" ")).shift(), n = n.join(" ")) : l && t.isAreaCode ? ((n = o.split(" "))[1] = n[1].replace(/\.+/, "".padEnd(t.areaCodeLength, ".")), n = n.join(" ")) : n = o, !e || 0 === e.length) return s ? "" : r.props.prefix;
                    if (e && e.length < 2 || !n || !d) return s ? e : r.props.prefix + e;
                    var p, h = w()(n, function(e, t) {
                        if (0 === e.remainingText.length) return e;
                        if ("." !== t) return {
                            formattedText: e.formattedText + t,
                            remainingText: e.remainingText
                        };
                        var r, n = i(r = e.remainingText) || a(r) || u(), o = n[0], c = n.slice(1);
                        return {
                            formattedText: e.formattedText + o,
                            remainingText: c
                        };
                    }, {
                        formattedText: "",
                        remainingText: e.split("")
                    });
                    return (p = f ? h.formattedText + h.remainingText.join("") : h.formattedText).includes("(") && !p.includes(")") && (p += ")"), p;
                }, r.cursorToEnd = function() {
                    var e = r.numberInputRef;
                    if (document.activeElement === e) {
                        e.focus();
                        var t = e.value.length;
                        ")" === e.value.charAt(t - 1) && (t -= 1), e.setSelectionRange(t, t);
                    }
                }, r.getElement = function(e) {
                    return r["flag_no_".concat(e)];
                }, r.getCountryData = function() {
                    return r.state.selectedCountry ? {
                        name: r.state.selectedCountry.name || "",
                        dialCode: r.state.selectedCountry.dialCode || "",
                        countryCode: r.state.selectedCountry.iso2 || "",
                        format: r.state.selectedCountry.format || ""
                    } : {};
                }, r.handleFlagDropdownClick = function(e) {
                    if (e.preventDefault(), r.state.showDropdown || !r.props.disabled) {
                        var t = r.state, n = t.preferredCountries, a = t.onlyCountries, o = t.selectedCountry, i = r.concatPreferredCountries(n, a).findIndex(function(e) {
                            return e.dialCode === o.dialCode && e.iso2 === o.iso2;
                        });
                        r.setState({
                            showDropdown: !r.state.showDropdown,
                            highlightCountryIndex: i
                        }, function() {
                            r.state.showDropdown && r.scrollTo(r.getElement(r.state.highlightCountryIndex));
                        });
                    }
                }, r.handleInput = function(e) {
                    var t = e.target.value, n = r.props, a = n.prefix, o = n.onChange, i = r.props.disableCountryCode ? "" : a, u = r.state.selectedCountry, c = r.state.freezeSelection;
                    if (!r.props.countryCodeEditable) {
                        var s = a + (u.hasAreaCodes ? r.state.onlyCountries.find(function(e) {
                            return e.iso2 === u.iso2 && e.mainCode;
                        }).dialCode : u.dialCode);
                        if (t.slice(0, s.length) !== s) return;
                    }
                    if (t === a) return o && o("", r.getCountryData(), e, ""), r.setState({
                        formattedNumber: ""
                    });
                    if (t.replace(/\D/g, "").length > 15) {
                        if (!1 === r.props.enableLongNumbers) return;
                        if ("number" == typeof r.props.enableLongNumbers && t.replace(/\D/g, "").length > r.props.enableLongNumbers) return;
                    }
                    if (t !== r.state.formattedNumber) {
                        e.preventDefault ? e.preventDefault() : e.returnValue = !1;
                        var l = r.props.country, f = r.state, d = f.onlyCountries, p = f.selectedCountry, h = f.hiddenAreaCodes;
                        if (o && e.persist(), t.length > 0) {
                            var m = t.replace(/\D/g, "");
                            (!r.state.freezeSelection || p && p.dialCode.length > m.length) && (u = r.props.disableCountryGuess ? p : r.guessSelectedCountry(m.substring(0, 6), l, d, h) || p, c = !1), i = r.formatNumber(m, u), u = u.dialCode ? u : p;
                        }
                        var y = e.target.selectionStart, b = e.target.selectionStart, g = r.state.formattedNumber, v = i.length - g.length;
                        r.setState({
                            formattedNumber: i,
                            freezeSelection: c,
                            selectedCountry: u
                        }, function() {
                            v > 0 && (b -= v), ")" == i.charAt(i.length - 1) ? r.numberInputRef.setSelectionRange(i.length - 1, i.length - 1) : b > 0 && g.length >= i.length ? r.numberInputRef.setSelectionRange(b, b) : y < g.length && r.numberInputRef.setSelectionRange(y, y), o && o(i.replace(/[^0-9]+/g, ""), r.getCountryData(), e, i);
                        });
                    }
                }, r.handleInputClick = function(e) {
                    r.setState({
                        showDropdown: !1
                    }), r.props.onClick && r.props.onClick(e, r.getCountryData());
                }, r.handleDoubleClick = function(e) {
                    var t = e.target.value.length;
                    e.target.setSelectionRange(0, t);
                }, r.handleFlagItemClick = function(e, t) {
                    var n = r.state.selectedCountry, a = r.state.onlyCountries.find(function(t) {
                        return t == e;
                    });
                    if (a) {
                        var o = r.state.formattedNumber.replace(" ", "").replace("(", "").replace(")", "").replace("-", ""), i = o.length > 1 ? o.replace(n.dialCode, a.dialCode) : a.dialCode, u = r.formatNumber(i.replace(/\D/g, ""), a);
                        r.setState({
                            showDropdown: !1,
                            selectedCountry: a,
                            freezeSelection: !0,
                            formattedNumber: u,
                            searchValue: ""
                        }, function() {
                            r.cursorToEnd(), r.props.onChange && r.props.onChange(u.replace(/[^0-9]+/g, ""), r.getCountryData(), t, u);
                        });
                    }
                }, r.handleInputFocus = function(e) {
                    r.numberInputRef && r.numberInputRef.value === r.props.prefix && r.state.selectedCountry && !r.props.disableCountryCode && r.setState({
                        formattedNumber: r.props.prefix + r.state.selectedCountry.dialCode
                    }, function() {
                        r.props.jumpCursorToEnd && setTimeout(r.cursorToEnd, 0);
                    }), r.setState({
                        placeholder: ""
                    }), r.props.onFocus && r.props.onFocus(e, r.getCountryData()), r.props.jumpCursorToEnd && setTimeout(r.cursorToEnd, 0);
                }, r.handleInputBlur = function(e) {
                    e.target.value || r.setState({
                        placeholder: r.props.placeholder
                    }), r.props.onBlur && r.props.onBlur(e, r.getCountryData());
                }, r.handleInputCopy = function(e) {
                    if (r.props.copyNumbersOnly) {
                        var t = window.getSelection().toString().replace(/[^0-9]+/g, "");
                        e.clipboardData.setData("text/plain", t), e.preventDefault();
                    }
                }, r.getHighlightCountryIndex = function(e) {
                    var t = r.state.highlightCountryIndex + e;
                    return t < 0 || t >= r.state.onlyCountries.length + r.state.preferredCountries.length ? t - e : r.props.enableSearch && t > r.getSearchFilteredCountries().length ? 0 : t;
                }, r.searchCountry = function() {
                    var e = r.getProbableCandidate(r.state.queryString) || r.state.onlyCountries[0], t = r.state.onlyCountries.findIndex(function(t) {
                        return t == e;
                    }) + r.state.preferredCountries.length;
                    r.scrollTo(r.getElement(t), !0), r.setState({
                        queryString: "",
                        highlightCountryIndex: t
                    });
                }, r.handleKeydown = function(e) {
                    var t = r.props.keys, n = e.target.className;
                    if (n.includes("selected-flag") && e.which === t.ENTER && !r.state.showDropdown) return r.handleFlagDropdownClick(e);
                    if (n.includes("form-control") && (e.which === t.ENTER || e.which === t.ESC)) return e.target.blur();
                    if (r.state.showDropdown && !r.props.disabled && (!n.includes("search-box") || e.which === t.UP || e.which === t.DOWN || e.which === t.ENTER || e.which === t.ESC && "" === e.target.value)) {
                        e.preventDefault ? e.preventDefault() : e.returnValue = !1;
                        var a = function(e) {
                            r.setState({
                                highlightCountryIndex: r.getHighlightCountryIndex(e)
                            }, function() {
                                r.scrollTo(r.getElement(r.state.highlightCountryIndex), !0);
                            });
                        };
                        switch(e.which){
                            case t.DOWN:
                                a(1);
                                break;
                            case t.UP:
                                a(-1);
                                break;
                            case t.ENTER:
                                r.props.enableSearch ? r.handleFlagItemClick(r.getSearchFilteredCountries()[r.state.highlightCountryIndex] || r.getSearchFilteredCountries()[0], e) : r.handleFlagItemClick([].concat(o(r.state.preferredCountries), o(r.state.onlyCountries))[r.state.highlightCountryIndex], e);
                                break;
                            case t.ESC:
                            case t.TAB:
                                r.setState({
                                    showDropdown: !1
                                }, r.cursorToEnd);
                                break;
                            default:
                                (e.which >= t.A && e.which <= t.Z || e.which === t.SPACE) && r.setState({
                                    queryString: r.state.queryString + String.fromCharCode(e.which)
                                }, r.state.debouncedQueryStingSearcher);
                        }
                    }
                }, r.handleInputKeyDown = function(e) {
                    var t = r.props, n = t.keys, a = t.onEnterKeyPress, o = t.onKeyDown;
                    e.which === n.ENTER && a && a(e), o && o(e);
                }, r.handleClickOutside = function(e) {
                    r.dropdownRef && !r.dropdownContainerRef.contains(e.target) && r.state.showDropdown && r.setState({
                        showDropdown: !1
                    });
                }, r.handleSearchChange = function(e) {
                    var t = e.currentTarget.value, n = r.state, a = n.preferredCountries, o = n.selectedCountry, i = 0;
                    if ("" === t && o) {
                        var u = r.state.onlyCountries;
                        i = r.concatPreferredCountries(a, u).findIndex(function(e) {
                            return e == o;
                        }), setTimeout(function() {
                            return r.scrollTo(r.getElement(i));
                        }, 100);
                    }
                    r.setState({
                        searchValue: t,
                        highlightCountryIndex: i
                    });
                }, r.concatPreferredCountries = function(e, t) {
                    return e.length > 0 ? o(new Set(e.concat(t))) : t;
                }, r.getDropdownCountryName = function(e) {
                    return e.localName || e.name;
                }, r.getSearchFilteredCountries = function() {
                    var e = r.state, t = e.preferredCountries, n = e.onlyCountries, a = e.searchValue, i = r.props.enableSearch, u = r.concatPreferredCountries(t, n), c = a.trim().toLowerCase().replace("+", "");
                    if (i && c) {
                        if (/^\d+$/.test(c)) return u.filter(function(e) {
                            var t = e.dialCode;
                            return [
                                "".concat(t)
                            ].some(function(e) {
                                return e.toLowerCase().includes(c);
                            });
                        });
                        var s = u.filter(function(e) {
                            var t = e.iso2;
                            return [
                                "".concat(t)
                            ].some(function(e) {
                                return e.toLowerCase().includes(c);
                            });
                        }), l = u.filter(function(e) {
                            var t = e.name, r = e.localName;
                            e.iso2;
                            return [
                                "".concat(t),
                                "".concat(r || "")
                            ].some(function(e) {
                                return e.toLowerCase().includes(c);
                            });
                        });
                        return r.scrollToTop(), o(new Set([].concat(s, l)));
                    }
                    return u;
                }, r.getCountryDropdownList = function() {
                    var e = r.state, t = e.preferredCountries, a = e.highlightCountryIndex, o = e.showDropdown, i = e.searchValue, u = r.props, c = u.disableDropdown, s = u.prefix, l = r.props, f = l.enableSearch, d = l.searchNotFound, p = l.disableSearchIcon, h = l.searchClass, m = l.searchStyle, b = l.searchPlaceholder, g = l.autocompleteSearch, v = r.getSearchFilteredCountries().map(function(e, t) {
                        var n = a === t, o = N()({
                            country: !0,
                            preferred: "us" === e.iso2 || "gb" === e.iso2,
                            active: "us" === e.iso2,
                            highlight: n
                        }), i = "flag ".concat(e.iso2);
                        return y.a.createElement("li", Object.assign({
                            ref: function(e) {
                                return r["flag_no_".concat(t)] = e;
                            },
                            key: "flag_no_".concat(t),
                            "data-flag-key": "flag_no_".concat(t),
                            className: o,
                            "data-dial-code": "1",
                            tabIndex: c ? "-1" : "0",
                            "data-country-code": e.iso2,
                            onClick: function(t) {
                                return r.handleFlagItemClick(e, t);
                            },
                            role: "option"
                        }, n ? {
                            "aria-selected": !0
                        } : {}), y.a.createElement("div", {
                            className: i
                        }), y.a.createElement("span", {
                            className: "country-name"
                        }, r.getDropdownCountryName(e)), y.a.createElement("span", {
                            className: "dial-code"
                        }, e.format ? r.formatNumber(e.dialCode, e) : s + e.dialCode));
                    }), C = y.a.createElement("li", {
                        key: "dashes",
                        className: "divider"
                    });
                    t.length > 0 && (!f || f && !i.trim()) && v.splice(t.length, 0, C);
                    var _ = N()(n({
                        "country-list": !0,
                        hide: !o
                    }, r.props.dropdownClass, !0));
                    return y.a.createElement("ul", {
                        ref: function(e) {
                            return !f && e && e.focus(), r.dropdownRef = e;
                        },
                        className: _,
                        style: r.props.dropdownStyle,
                        role: "listbox",
                        tabIndex: "0"
                    }, f && y.a.createElement("li", {
                        className: N()(n({
                            search: !0
                        }, h, h))
                    }, !p && y.a.createElement("span", {
                        className: N()(n({
                            "search-emoji": !0
                        }, "".concat(h, "-emoji"), h)),
                        role: "img",
                        "aria-label": "Magnifying glass"
                    }, "🔎"), y.a.createElement("input", {
                        className: N()(n({
                            "search-box": !0
                        }, "".concat(h, "-box"), h)),
                        style: m,
                        type: "search",
                        placeholder: b,
                        autoFocus: !0,
                        autoComplete: g ? "on" : "off",
                        value: i,
                        onChange: r.handleSearchChange
                    })), v.length > 0 ? v : y.a.createElement("li", {
                        className: "no-entries-message"
                    }, y.a.createElement("span", null, d)));
                };
                var s, l = new P(e.enableAreaCodes, e.enableTerritories, e.regions, e.onlyCountries, e.preferredCountries, e.excludeCountries, e.preserveOrder, e.masks, e.priority, e.areaCodes, e.localization, e.prefix, e.defaultMask, e.alwaysDefaultMask), h = l.onlyCountries, m = l.preferredCountries, b = l.hiddenAreaCodes, v = e.value ? e.value.replace(/\D/g, "") : "";
                s = e.disableInitialCountryGuess ? 0 : v.length > 1 ? r.guessSelectedCountry(v.substring(0, 6), e.country, h, b) || 0 : e.country && h.find(function(t) {
                    return t.iso2 == e.country;
                }) || 0;
                var _, S = v.length < 2 && s && !j()(v, s.dialCode) ? s.dialCode : "";
                _ = "" === v && 0 === s ? "" : r.formatNumber((e.disableCountryCode ? "" : S) + v, s.name ? s : void 0);
                var x = h.findIndex(function(e) {
                    return e == s;
                });
                return r.state = {
                    showDropdown: e.showDropdown,
                    formattedNumber: _,
                    onlyCountries: h,
                    preferredCountries: m,
                    hiddenAreaCodes: b,
                    selectedCountry: s,
                    highlightCountryIndex: x,
                    queryString: "",
                    freezeSelection: !1,
                    debouncedQueryStingSearcher: g()(r.searchCountry, 250),
                    searchValue: ""
                }, r;
            }
            var r, l, m;
            return function(e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }), t && h(e, t);
            }(t, e), r = t, (l = [
                {
                    key: "componentDidMount",
                    value: function() {
                        document.addEventListener && this.props.enableClickOutside && document.addEventListener("mousedown", this.handleClickOutside), this.props.onMount && this.props.onMount(this.state.formattedNumber.replace(/[^0-9]+/g, ""), this.getCountryData(), this.state.formattedNumber);
                    }
                },
                {
                    key: "componentWillUnmount",
                    value: function() {
                        document.removeEventListener && this.props.enableClickOutside && document.removeEventListener("mousedown", this.handleClickOutside);
                    }
                },
                {
                    key: "componentDidUpdate",
                    value: function(e, t, r) {
                        e.country !== this.props.country ? this.updateCountry(this.props.country) : e.value !== this.props.value && this.updateFormattedNumber(this.props.value);
                    }
                },
                {
                    key: "updateFormattedNumber",
                    value: function(e) {
                        if (null === e) return this.setState({
                            selectedCountry: 0,
                            formattedNumber: ""
                        });
                        var t = this.state, r = t.onlyCountries, n = t.selectedCountry, a = t.hiddenAreaCodes, o = this.props, i = o.country, u = o.prefix;
                        if ("" === e) return this.setState({
                            selectedCountry: n,
                            formattedNumber: ""
                        });
                        var c, s, l = e.replace(/\D/g, "");
                        if (n && j()(e, u + n.dialCode)) s = this.formatNumber(l, n), this.setState({
                            formattedNumber: s
                        });
                        else {
                            var f = (c = this.props.disableCountryGuess ? n : this.guessSelectedCountry(l.substring(0, 6), i, r, a) || n) && j()(l, u + c.dialCode) ? c.dialCode : "";
                            s = this.formatNumber((this.props.disableCountryCode ? "" : f) + l, c || void 0), this.setState({
                                selectedCountry: c,
                                formattedNumber: s
                            });
                        }
                    }
                },
                {
                    key: "render",
                    value: function() {
                        var e, t, r, a = this, o = this.state, i = o.onlyCountries, u = o.selectedCountry, c = o.showDropdown, s = o.formattedNumber, l = o.hiddenAreaCodes, f = this.props, d = f.disableDropdown, p = f.renderStringAsFlag, h = f.isValid, m = f.defaultErrorMessage, b = f.specialLabel;
                        if ("boolean" == typeof h) t = h;
                        else {
                            var g = h(s.replace(/\D/g, ""), u, i, l);
                            "boolean" == typeof g ? !1 === (t = g) && (r = m) : (t = !1, r = g);
                        }
                        var v = N()((n(e = {}, this.props.containerClass, !0), n(e, "react-tel-input", !0), e)), C = N()({
                            arrow: !0,
                            up: c
                        }), _ = N()(n({
                            "form-control": !0,
                            "invalid-number": !t,
                            open: c
                        }, this.props.inputClass, !0)), w = N()({
                            "selected-flag": !0,
                            open: c
                        }), S = N()(n({
                            "flag-dropdown": !0,
                            "invalid-number": !t,
                            open: c
                        }, this.props.buttonClass, !0)), j = "flag ".concat(u && u.iso2);
                        return y.a.createElement("div", {
                            className: "".concat(v, " ").concat(this.props.className),
                            style: this.props.style || this.props.containerStyle,
                            onKeyDown: this.handleKeydown
                        }, b && y.a.createElement("div", {
                            className: "special-label"
                        }, b), r && y.a.createElement("div", {
                            className: "invalid-number-message"
                        }, r), y.a.createElement("input", Object.assign({
                            className: _,
                            style: this.props.inputStyle,
                            onChange: this.handleInput,
                            onClick: this.handleInputClick,
                            onDoubleClick: this.handleDoubleClick,
                            onFocus: this.handleInputFocus,
                            onBlur: this.handleInputBlur,
                            onCopy: this.handleInputCopy,
                            value: s,
                            onKeyDown: this.handleInputKeyDown,
                            placeholder: this.props.placeholder,
                            disabled: this.props.disabled,
                            type: "tel"
                        }, this.props.inputProps, {
                            ref: function(e) {
                                a.numberInputRef = e, "function" == typeof a.props.inputProps.ref ? a.props.inputProps.ref(e) : "object" == typeof a.props.inputProps.ref && (a.props.inputProps.ref.current = e);
                            }
                        })), y.a.createElement("div", {
                            className: S,
                            style: this.props.buttonStyle,
                            ref: function(e) {
                                return a.dropdownContainerRef = e;
                            }
                        }, p ? y.a.createElement("div", {
                            className: w
                        }, p) : y.a.createElement("div", {
                            onClick: d ? void 0 : this.handleFlagDropdownClick,
                            className: w,
                            title: u ? "".concat(u.localName || u.name, ": + ").concat(u.dialCode) : "",
                            tabIndex: d ? "-1" : "0",
                            role: "button",
                            "aria-haspopup": "listbox",
                            "aria-expanded": !!c || void 0
                        }, y.a.createElement("div", {
                            className: j
                        }, !d && y.a.createElement("div", {
                            className: C
                        }))), c && this.getCountryDropdownList()));
                    }
                }
            ]) && s(r.prototype, l), m && s(r, m), t;
        }(y.a.Component);
        F.defaultProps = {
            country: "",
            value: "",
            onlyCountries: [],
            preferredCountries: [],
            excludeCountries: [],
            placeholder: "1 (702) 123-4567",
            searchPlaceholder: "search",
            searchNotFound: "No entries to show",
            flagsImagePath: "./flags.png",
            disabled: !1,
            containerStyle: {},
            inputStyle: {},
            buttonStyle: {},
            dropdownStyle: {},
            searchStyle: {},
            containerClass: "",
            inputClass: "",
            buttonClass: "",
            dropdownClass: "",
            searchClass: "",
            className: "",
            autoFormat: !0,
            enableAreaCodes: !1,
            enableTerritories: !1,
            disableCountryCode: !1,
            disableDropdown: !1,
            enableLongNumbers: !1,
            countryCodeEditable: !0,
            enableSearch: !1,
            disableSearchIcon: !1,
            disableInitialCountryGuess: !1,
            disableCountryGuess: !1,
            regions: "",
            inputProps: {},
            localization: {},
            masks: null,
            priority: null,
            areaCodes: null,
            preserveOrder: [],
            defaultMask: "... ... ... ... ..",
            alwaysDefaultMask: !1,
            prefix: "+",
            copyNumbersOnly: !0,
            renderStringAsFlag: "",
            autocompleteSearch: !1,
            jumpCursorToEnd: !0,
            enableAreaCodeStretch: !1,
            enableClickOutside: !0,
            showDropdown: !1,
            isValid: !0,
            defaultErrorMessage: "",
            specialLabel: "Phone",
            onEnterKeyPress: null,
            keys: {
                UP: 38,
                DOWN: 40,
                RIGHT: 39,
                LEFT: 37,
                ENTER: 13,
                ESC: 27,
                PLUS: 43,
                A: 65,
                Z: 90,
                SPACE: 32,
                TAB: 9
            }
        };
        t.default = F;
    }
]);
}}),
"[project]/node_modules/lucide-react/dist/esm/shared/src/utils.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "hasA11yProp": (()=>hasA11yProp),
    "mergeClasses": (()=>mergeClasses),
    "toCamelCase": (()=>toCamelCase),
    "toKebabCase": (()=>toKebabCase),
    "toPascalCase": (()=>toPascalCase)
});
const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
const toCamelCase = (string)=>string.replace(/^([A-Z])|[\s-_]+(\w)/g, (match, p1, p2)=>p2 ? p2.toUpperCase() : p1.toLowerCase());
const toPascalCase = (string)=>{
    const camelCase = toCamelCase(string);
    return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);
};
const mergeClasses = (...classes)=>classes.filter((className, index, array)=>{
        return Boolean(className) && className.trim() !== "" && array.indexOf(className) === index;
    }).join(" ").trim();
const hasA11yProp = (props)=>{
    for(const prop in props){
        if (prop.startsWith("aria-") || prop === "role" || prop === "title") {
            return true;
        }
    }
};
;
 //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/defaultAttributes.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "default": (()=>defaultAttributes)
});
var defaultAttributes = {
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round",
    strokeLinejoin: "round"
};
;
 //# sourceMappingURL=defaultAttributes.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/Icon.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "default": (()=>Icon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$defaultAttributes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/defaultAttributes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/shared/src/utils.js [app-ssr] (ecmascript)");
;
;
;
const Icon = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])(({ color = "currentColor", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = "", children, iconNode, ...rest }, ref)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createElement"])("svg", {
        ref,
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$defaultAttributes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
        width: size,
        height: size,
        stroke: color,
        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mergeClasses"])("lucide", className),
        ...!children && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasA11yProp"])(rest) && {
            "aria-hidden": "true"
        },
        ...rest
    }, [
        ...iconNode.map(([tag, attrs])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createElement"])(tag, attrs)),
        ...Array.isArray(children) ? children : [
            children
        ]
    ]));
;
 //# sourceMappingURL=Icon.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/createLucideIcon.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "default": (()=>createLucideIcon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/shared/src/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$Icon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/Icon.js [app-ssr] (ecmascript)");
;
;
;
const createLucideIcon = (iconName, iconNode)=>{
    const Component = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])(({ className, ...props }, ref)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createElement"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$Icon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"], {
            ref,
            iconNode,
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mergeClasses"])(`lucide-${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKebabCase"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toPascalCase"])(iconName))}`, `lucide-${iconName}`, className),
            ...props
        }));
    Component.displayName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toPascalCase"])(iconName);
    return Component;
};
;
 //# sourceMappingURL=createLucideIcon.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/icons/loader-circle.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "__iconNode": (()=>__iconNode),
    "default": (()=>LoaderCircle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$createLucideIcon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/createLucideIcon.js [app-ssr] (ecmascript)");
;
const __iconNode = [
    [
        "path",
        {
            d: "M21 12a9 9 0 1 1-6.219-8.56",
            key: "13zald"
        }
    ]
];
const LoaderCircle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$createLucideIcon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("loader-circle", __iconNode);
;
 //# sourceMappingURL=loader-circle.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/icons/loader-circle.js [app-ssr] (ecmascript) <export default as Loader2>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Loader2": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$loader$2d$circle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$loader$2d$circle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/loader-circle.js [app-ssr] (ecmascript)");
}}),

};

//# sourceMappingURL=node_modules_bfc4f859._.js.map