{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/baxa/Documents/atatek/atatek-v2/frontend/src/app/api/proxy/%5B...path%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(request: NextRequest, { params }: { params: Promise<{ path: string[] }> }) {\n  const { path } = await params;\n  return handleProxyRequest(request, path, 'GET');\n}\n\nexport async function POST(request: NextRequest, { params }: { params: Promise<{ path: string[] }> }) {\n  const { path } = await params;\n  return handleProxyRequest(request, path, 'POST');\n}\n\nexport async function PUT(request: NextRequest, { params }: { params: Promise<{ path: string[] }> }) {\n  const { path } = await params;\n  return handleProxyRequest(request, path, 'PUT');\n}\n\nexport async function DELETE(request: NextRequest, { params }: { params: Promise<{ path: string[] }> }) {\n  const { path } = await params;\n  return handleProxyRequest(request, path, 'DELETE');\n}\n\nasync function handleProxyRequest(request: NextRequest, pathSegments: string[], method: string) {\n  try {\n    const apiPath = pathSegments.join('/');\n    const searchParams = request.nextUrl.searchParams.toString();\n    const apiUrl = `https://api.atatek.kz/${apiPath}${searchParams ? `?${searchParams}` : ''}`;\n    \n    console.log(`üîÑ Proxying ${method} request to:`, apiUrl);\n    \n    // Prepare headers - copy all relevant headers from the original request\n    const headers: Record<string, string> = {};\n    \n    // Copy important headers\n    const headersToForward = [\n      'content-type',\n      'authorization',\n      'user-agent',\n      'accept',\n      'accept-language',\n      'accept-encoding',\n      'cookie'\n    ];\n    \n    headersToForward.forEach(headerName => {\n      const value = request.headers.get(headerName);\n      if (value) {\n        headers[headerName] = value;\n      }\n    });\n    \n    // Ensure content-type for POST/PUT\n    if (method === 'POST' || method === 'PUT') {\n      headers['content-type'] = 'application/json';\n    }\n    \n    console.log('üç™ Request headers:', headers);\n    \n    // Prepare request body for POST/PUT requests\n    let body: string | undefined;\n    if (method === 'POST' || method === 'PUT') {\n      try {\n        const requestBody = await request.json();\n        body = JSON.stringify(requestBody);\n        console.log('üìù Request body:', body);\n      } catch (error) {\n        console.log('‚ùå No request body or invalid JSON');\n        body = undefined;\n      }\n    }\n    \n    // Make the request to the API\n    const response = await fetch(apiUrl, {\n      method,\n      headers,\n      body,\n    });\n    \n    console.log(`‚úÖ API response status:`, response.status);\n    console.log(`üç™ Response headers:`, Object.fromEntries(response.headers.entries()));\n    \n    // Get response data\n    const responseData = await response.text();\n    let jsonData;\n    try {\n      jsonData = JSON.parse(responseData);\n    } catch {\n      jsonData = responseData;\n    }\n    \n    // Create response\n    const nextResponse = NextResponse.json(jsonData, {\n      status: response.status,\n      statusText: response.statusText,\n    });\n    \n    // Forward ALL set-cookie headers properly and modify them for development\n    const setCookieHeaders = response.headers.getSetCookie();\n    if (setCookieHeaders && setCookieHeaders.length > 0) {\n      console.log('üç™ Original cookies from API:', setCookieHeaders);\n      \n      setCookieHeaders.forEach(cookie => {\n        // Modify cookie for development environment\n        let modifiedCookie = cookie;\n        \n        // For development, change SameSite=none to SameSite=lax and remove Secure\n        if (process.env.NODE_ENV === 'development') {\n          modifiedCookie = modifiedCookie\n            .replace(/SameSite=none/gi, 'SameSite=lax')\n            .replace(/;\\s*Secure/gi, '');\n        }\n        \n        console.log('üç™ Modified cookie:', modifiedCookie);\n        nextResponse.headers.append('Set-Cookie', modifiedCookie);\n      });\n    }\n    \n    // Also handle single cookie header as fallback\n    const singleSetCookie = response.headers.get('set-cookie');\n    if (singleSetCookie && (!setCookieHeaders || setCookieHeaders.length === 0)) {\n      console.log('üç™ Single cookie from API:', singleSetCookie);\n      \n      let modifiedCookie = singleSetCookie;\n      if (process.env.NODE_ENV === 'development') {\n        modifiedCookie = modifiedCookie\n          .replace(/SameSite=none/gi, 'SameSite=lax')\n          .replace(/;\\s*Secure/gi, '');\n      }\n      \n      console.log('üç™ Modified single cookie:', modifiedCookie);\n      nextResponse.headers.set('Set-Cookie', modifiedCookie);\n    }\n    \n    return nextResponse;\n    \n  } catch (error) {\n    console.error('‚ùå Proxy error:', error);\n    return NextResponse.json(\n      { error: 'Proxy request failed' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}